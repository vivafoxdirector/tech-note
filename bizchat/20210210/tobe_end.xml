<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skt.mate.model.mapper.survey.SurveyMapper">

    <select id="selectSurveyQuestionList" parameterType="com.skt.mate.model.domain.survey.QustVO" resultType="com.skt.mate.model.domain.survey.QustVO">
        SELECT               /* [survey/survey.sqlmap.xml].[selectSurveyQuestionList]*/
                qust_seq AS qustSeq
            ,   survey_seq AS surveySeq
            ,   qust_prt_ord AS qustPrtOrd
            ,   msg_tp_cd AS msgTpCd
            ,   qust_cont AS qustCont
            ,   qust_form_cd AS qustFormCd
            ,   qust_ord_cl_cd AS qustOrdClCd
            ,   qust_res_cl_cd AS qustResClCd
            ,   ans_err_noti_msg AS ansErrNotiMsg
            ,   qust_img_url AS qustImgUrl
            ,   crt_dttm AS crtDttm
            ,   crt_user_id AS crtUserId
            ,   upd_dttm AS updDttm
            ,   upd_user_id AS updUserId
            ,   coupon_title_msg AS couponTitleMsg
            ,   coupon_cd_file_url AS couponCdFileUrl
            ,   coupon_file_orgnl_nm AS couponFileOrgnlNm
            ,   coupon_file_size AS couponFileSize
            ,   coupon_tp_cd AS couponTpCd
        FROM
                survey_qust
        WHERE
                survey_seq = #{surveySeq}
        ORDER BY
                qust_prt_ord
    </select>

    <select id="selectSurveyQuestionCount" parameterType="Long" resultType="Integer">
        SELECT               /* [survey/survey.sqlmap.xml].[selectSurveyQuestionCount]*/
                COUNT(1)
        FROM
                survey_qust
        WHERE
                survey_seq = #{surveySeq}
            AND qust_form_cd != 'COUPON'
    </select>



    <select id="selectSurvey" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT               /* [survey/survey.sqlmap.xml].[selectSurvey]*/
                s.survey_seq AS surveySeq
            ,   s.survey_title AS surveyTitle
            ,   s.survey_start_dttm AS surveyStartDttm
            ,   s.survey_end_dttm AS surveyEndDttm
            ,   s.tgt_cnd_use_yn AS tgtCndUseYn
            ,   s.tgt_cnd_cont AS tgtCndCont
            ,   s.last_qust_seq AS lastQustSeq
            ,   s.survey_spc_num AS surveySpcNum
            ,   s.rcver_phone_num_cnt AS rcverPhoneNumCnt
            ,   s.rcv_rjt_phone_num_cnt AS rcvRjtPhoneNumCnt
            ,   s.rcver_phone_num_file_url AS rcverPhoneNumFileUrl
            ,   s.rcver_phone_num_ul_dttm AS rcverPhoneNumUlDttm
            ,   s.rcv_rjt_phone_num_file_url AS rcvRjtPhoneNumFileUrl
            ,   s.rcv_rjt_phone_num_ul_dttm AS rcvRjtPhoneNumUlDttm
            ,   s.survey_agre_guide_msg AS surveyAgreGuideMsg
            ,   s.survey_agre_title_msg AS surveyAgreTitleMsg
            ,   s.survey_agre_img_file_path AS surveyAgreImgFilePath
            ,   s.survey_compl_guide_msg AS surveyComplGuideMsg
            ,   s.survey_compl_title_msg AS surveyComplTitleMsg
            ,   s.survey_compl_img_file_path AS surveyComplImgFilePath
            ,   s.survey_end_noti_msg AS surveyEndNotiMsg
            ,   s.survey_state_cd AS surveyStateCd
            ,   s.ans_err_noti_msg AS ansErrNotiMsg
            ,   s.REF_SURVEY_SEQ as refSurveySeq
            ,   s.crt_dttm AS crtDttm
            ,   s.crt_user_id AS crtUserId
            ,   s.upd_dttm AS updDttm
            ,   s.upd_user_id AS updUserId
            ,   s.custom_id AS customId
            ,   p.survey_project_id AS surveyProjectId
            ,   p.survey_project_nm AS surveyProjectNm
            ,   s.QUST_NUM_DISP_YN AS qustNumYn
            ,   NVL(s.SURVEY_COMPL_TARGET_CNT, 0) AS surveyComplTargetCnt
            ,   r.rcs_msg_type AS rcsMsgType
            ,
	        CASE
			    WHEN r.RCS_MSG_TYPE = 'LMS002' THEN 'RCS_LMS'
			    WHEN r.RCS_MSG_TYPE = 'MMS004' THEN 'RCS_MMS'
			    WHEN r.RCS_MSG_TYPE = 'MMS007' THEN 'RCS_MMS'
			    WHEN r.RCS_MSG_TYPE = 'MMS008' THEN 'RCS_MMS'
			    WHEN r.RCS_MSG_TYPE = 'MMS009' THEN 'RCS_MMS'
			    WHEN r.RCS_MSG_TYPE = 'MMS010' THEN 'RCS_MMS'
	            ELSE NVL(s.SURVEY_MSG_TP, '')
	        END as surveyMsgTp
            ,   NVL(s.BALANCE_ACCOUNT_CNT, 0) AS balanceAccountCnt
        FROM    SURVEY s
                INNER JOIN survey_project p ON s.survey_project_seq = p.survey_project_seq
                LEFT OUTER JOIN survey_rcs r ON s.SURVEY_SEQ = r.SURVEY_SEQ
        WHERE s.survey_seq = #{surveySeq}
    </select>



    <select id="selectSurveyById" parameterType="String" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT
        SURVEY_SEQ AS surveySeq,
        SURVEY_TITLE AS surveyTitle,
        SURVEY_START_DTTM AS surveyStartDttm,
        SURVEY_END_DTTM AS surveyEndDttm,
        SURVEY_START_DTTM AS surveyStartStr,
        SURVEY_END_DTTM AS surveyEndStr,
        TGT_CND_USE_YN AS tgtCndUseYn,
        TGT_CND_CONT AS tgtCndCont,
        LAST_QUST_SEQ AS lastQustSeq,
        SURVEY_SPC_NUM AS surveySpcNum,
        RCVER_PHONE_NUM_CNT AS rcverPhoneNumCnt,
        RCV_RJT_PHONE_NUM_CNT AS rcvRjtPhoneNumCnt,
        RCVER_PHONE_NUM_FILE_URL AS rcverPhoneNumFileUrl,
        RCVER_PHONE_NUM_UL_DTTM AS rcverPhoneNumUlDttm,
        RCV_RJT_PHONE_NUM_FILE_URL AS rcvRjtPhoneNumFileUrl,
        RCV_RJT_PHONE_NUM_UL_DTTM AS rcvRjtPhoneNumUlDttm,
        RCV_RJT_PHN_NM_ORGNL_FL_NM as rcvRjtPhoneNumOrgnlNm,
        SURVEY_AGRE_GUIDE_MSG AS surveyAgreGuideMsg,
        SURVEY_AGRE_TITLE_MSG AS surveyAgreTitleMsg,
        SURVEY_AGRE_IMG_FILE_PATH AS surveyAgreImgFilePath,
        SURVEY_COMPL_GUIDE_MSG AS surveyComplGuideMsg,
        SURVEY_COMPL_TITLE_MSG AS surveyComplTitleMsg,
        SURVEY_COMPL_IMG_FILE_PATH AS surveyComplImgFilePath,
        SURVEY_END_NOTI_MSG AS surveyEndNotiMsg,
        SURVEY_STATE_CD AS surveyStateCd,
        ANS_ERR_NOTI_MSG AS ansErrNotiMsg,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId,
        CUSTOM_ID AS customId,
        SURVEY_PROJECT_SEQ AS surveyProjectSeq,
        SURVEY_COMPL_TARGET_CNT AS surveyComplTargetCnt,
        QUST_NUM_DISP_YN AS qustNumYn,
        AGRE_COUPON_CD_FILE_URL as agreCouponCdFileUrl,
		AGRE_COUPON_FILE_ORGNL_NM as agreCouponFileOrgnlNm,
		AGRE_COUPON_FILE_SIZE as agreCouponFileSize,
		AGRE_COUPON_TP_CD as agreCouponTpCd,
		AGRE_COUPON_ASSIGN_YN as agreCouponAssignYn,
		BOOKING_YN as bookingYn,
		SURVEY_MSG_TP as surveyMsgTp,
		NVL(BALANCE_ACCOUNT_CNT, 0) AS balanceAccountCnt
        FROM SURVEY
        WHERE SURVEY_SEQ = #{surveySeq}
    </select>
    
    <select id="selectSurveyRcsById" parameterType="Long" resultType="com.skt.mate.model.domain.survey.SurveyRcsVO">
		SELECT
		    RCS_SEQ as rcsSeq,
		    SURVEY_SEQ as surveySeq,
		    RCS_MSG_TYPE as rcsMsgTp,
		    SLIDE_CNT as sliceCnt,
		    FOOTER_PHONE_NUM as footerPhoneNum,
		    TITLE_MSG_1 as titleMsg1,
		    GUIDE_MSG_1 as guideMsg1,
		    IMG_FILE_PATH_1 as imgFilePath1,
		    IMG_FILE_URL_1 as imgFileUrl1,
		    TITLE_MSG_2 as titleMsg2,
		    GUIDE_MSG_2 as guideMsg2,
		    IMG_FILE_PATH_2 as imgFilePath2,
		    IMG_FILE_URL_2 as imgFileUrl2,
		    TITLE_MSG_3 as titleMsg3,
		    GUIDE_MSG_3 as guideMsg3,
		    IMG_FILE_PATH_3 as imgFilePath3,
		    IMG_FILE_URL_3 as imgFileUrl3,
		    TITLE_MSG_4 as titleMsg4,
		    GUIDE_MSG_4 as guideMsg4,
		    IMG_FILE_PATH_4 as imgFilePath4,
		    IMG_FILE_URL_4 as imgFileUrl4,
		    TITLE_MSG_5 as titleMsg5,
		    GUIDE_MSG_5 as guideMsg5,
		    IMG_FILE_PATH_5 as imgFilePath5,
		    IMG_FILE_URL_5 as imgFileUrl5,
		    TITLE_MSG_6 as titleMsg6,
		    GUIDE_MSG_6 as guideMsg6,
		    IMG_FILE_PATH_6 as imgFilePath6,
		    IMG_FILE_URL_6 as imgFileUrl6
		FROM
		    SURVEY_RCS
        WHERE
       		SURVEY_SEQ = #{surveySeq}
    </select>

    <select id="selectSurveyRcsBySeq" parameterType="Long" resultType="com.skt.mate.model.domain.survey.SurveyRcsVO">
		SELECT
		    RCS_SEQ as rcsSeq,
		    SURVEY_SEQ as surveySeq,
		    RCS_MSG_TYPE as rcsMsgTp,
		    SLIDE_CNT as sliceCnt,
		    FOOTER_PHONE_NUM as footerPhoneNum,
		    TITLE_MSG_1 as titleMsg1,
		    GUIDE_MSG_1 as guideMsg1,
		    IMG_FILE_PATH_1 as imgFilePath1,
		    IMG_FILE_URL_1 as imgFileUrl1,
		    TITLE_MSG_2 as titleMsg2,
		    GUIDE_MSG_2 as guideMsg2,
		    IMG_FILE_PATH_2 as imgFilePath2,
		    IMG_FILE_URL_2 as imgFileUrl2,
		    TITLE_MSG_3 as titleMsg3,
		    GUIDE_MSG_3 as guideMsg3,
		    IMG_FILE_PATH_3 as imgFilePath3,
		    IMG_FILE_URL_3 as imgFileUrl3,
		    TITLE_MSG_4 as titleMsg4,
		    GUIDE_MSG_4 as guideMsg4,
		    IMG_FILE_PATH_4 as imgFilePath4,
		    IMG_FILE_URL_4 as imgFileUrl4,
		    TITLE_MSG_5 as titleMsg5,
		    GUIDE_MSG_5 as guideMsg5,
		    IMG_FILE_PATH_5 as imgFilePath5,
		    IMG_FILE_URL_5 as imgFileUrl5,
		    TITLE_MSG_6 as titleMsg6,
		    GUIDE_MSG_6 as guideMsg6,
		    IMG_FILE_PATH_6 as imgFilePath6,
		    IMG_FILE_URL_6 as imgFileUrl6
		FROM
		    SURVEY_RCS
        WHERE
       		RCS_SEQ = #{rcsSeq}
    </select>

    <select id="selectSurveyRcsBtnById" parameterType="Long" resultType="com.skt.mate.model.domain.survey.SurveyRcsBtnVO">
		SELECT
		    RCS_SEQ as rcsSeq,
		    RCS_SLIDE_ORD as rcsSliceOrd,
		    BTN_TYPE_1 as btnType1,
		    BTN_NAME_1 as btnName1,
		    ACT_URL_1 as actUrl1,
		    ACT_PHONE_NUM_1 as actPhoneNum1,
		    GEO_NAME_1 as geoName1,
		    GEO_URL_1 as geoURL1,
		    BTN_TYPE_2 as btnType2,
		    BTN_NAME_2 as btnName2,
		    ACT_URL_2 as actUrl2,
		    ACT_PHONE_NUM_2 as actPhoneNum2,
		    GEO_NAME_2 as geoName2,
		    GEO_URL_2 as geoURL2
		FROM
		    SURVEY_RCS_BTN
		WHERE
		    RCS_SEQ = #{rcsSeq}
		ORDER BY RCS_SLIDE_ORD ASC
    </select>

    <insert id="insertSurveyResponse" parameterType="com.skt.mate.model.domain.survey.SurveyResVO">
        <selectKey resultType="Long" keyProperty="surveyResSeq" order="BEFORE">
            SELECT
            SURVEY_RES_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY_RES (
        SURVEY_RES_SEQ,
        SURVEY_SEQ,
        SND_PHONE_NUM,
        RCVER_PHONE_NUM,
        QUST_SEQ,
        ANS_SEQ,
        RCV_MSG_SEQ,
        SND_MSG_SEQ,
        MSG_TP_CD,
        MSG_CONT
        )
        VALUES (
        #{surveyResSeq}
        ,#{surveySeq}
        ,#{sndPhoneNum}
        ,#{rcverPhoneNum}
        ,#{qustSeq}
        ,#{ansSeq}
        ,#{rcvMsgSeq}
        ,#{sndMsgSeq}
        ,#{msgTpCd}
        ,#{msgCont}
        )
    </insert>

    <select id="getSurveyJoinCountWithReceivedStartTxt" parameterType="com.skt.mate.model.domain.survey.SurveyResVO" resultType="Integer">
        SELECT count(*)
        FROM SURVEY_PARTCPTN
        WHERE RCVER_PHONE_NUM = #{rcverPhoneNum}
        AND SURVEY_SEQ = (
          SELECT SURVEY_SEQ FROM
          (
            SELECT SURVEY_SEQ
            FROM SURVEY_RES
            WHERE SND_PHONE_NUM = #{sndPhoneNum}
            AND RCVER_PHONE_NUM = #{rcverPhoneNum}
            AND MSG_TP_CD = 'AGRE_MSG'
            ORDER BY SURVEY_RES_SEQ DESC
          ) resultSet
          WHERE ROWNUM=1
        )
    </select>

    <select id="selectSurveyHistoryForSurveyJoin" parameterType="com.skt.mate.model.domain.survey.SurveyResVO" resultType="com.skt.mate.model.domain.survey.SurveyResVO">
        SELECT * FROM (
            SELECT
            SURVEY_RES_SEQ AS surveyResSeq,
            SURVEY_SEQ AS surveySeq,
            SND_PHONE_NUM AS sndPhoneNum,
            RCVER_PHONE_NUM AS rcverPhoneNum,
            QUST_SEQ AS qustSeq,
            ANS_SEQ AS ansSeq,
            RCV_MSG_SEQ AS rcvMsgSeq,
            SND_MSG_SEQ AS sndMsgSeq,
            MSG_TP_CD AS msgTpCd,
            MSG_CONT AS msgCont,
            CRT_DTTM AS crtDttm
            FROM SURVEY_RES
            WHERE SND_PHONE_NUM = #{sndPhoneNum}
            AND RCVER_PHONE_NUM = #{rcverPhoneNum}
            AND MSG_TP_CD = 'AGRE_MSG'
            ORDER BY SURVEY_RES_SEQ DESC
        ) resultSet
        WHERE ROWNUM=1
    </select>

    <insert id="insertSurveyJoinInfo" parameterType="com.skt.mate.model.domain.survey.SurveyPartcptnVO">
        INSERT INTO SURVEY_PARTCPTN (
        SURVEY_SEQ
        ,RCVER_PHONE_NUM
        ,PARTCPTN_STATE_CD
        )
        VALUES (
        #{surveySeq}
        ,#{rcverPhoneNum}
        ,#{partcptnStateCd}
        )
    </insert>

    <select id="selectSurveyJoinInfo" parameterType="com.skt.mate.model.domain.survey.SurveyPartcptnVO" resultType="com.skt.mate.model.domain.survey.SurveyPartcptnVO">
        SELECT
        SURVEY_SEQ AS surveySeq,
        RCVER_PHONE_NUM AS rcverPhoneNum,
        SURVEY_COMPL_QUST_SEQ AS surveyComplQustSeq,
        SURVEY_NEXT_QUST_SEQ AS surveyNextQustSeq,
        PARTCPTN_STATE_CD AS partcptnStateCd,
        CRT_DTTM AS crtDttm
        FROM SURVEY_PARTCPTN
        WHERE SURVEY_SEQ = #{surveySeq}
        AND RCVER_PHONE_NUM = #{rcverPhoneNum}
    </select>

    <select id="selectSurveyQuestionFirst" parameterType="com.skt.mate.model.domain.survey.QustVO" resultType="com.skt.mate.model.domain.survey.QustVO">
        SELECT * /*[survey/survey.sqlmap.xml].[selectSurveyQuestionFirst] */
        FROM (
            SELECT
            QUST_SEQ AS qustSeq,
            SURVEY_SEQ AS surveySeq,
            QUST_PRT_ORD AS qustPrtOrd,
            MSG_TP_CD AS msgTpCd,
            QUST_CONT AS qustCont,
            QUST_FORM_CD AS qustFormCd,
            QUST_ORD_CL_CD AS qustOrdClCd,
            QUST_RES_CL_CD AS qustResClCd,
            ANS_ERR_NOTI_MSG AS ansErrNotiMsg,
            QUST_IMG_URL AS qustImgUrl,
            CRT_DTTM AS crtDttm,
            CRT_USER_ID AS crtUserId,
            UPD_DTTM AS updDttm,
            UPD_USER_ID AS updUserId,
            COUPON_TITLE_MSG AS couponTitleMsg,
			COUPON_CD_FILE_URL AS couponCdFileUrl,
			COUPON_FILE_ORGNL_NM AS couponFileOrgnlNm,
			COUPON_FILE_SIZE AS couponFileSize,
			COUPON_TP_CD AS couponTpCd,
			REF_QUST_SEQ AS refQustSeq
            FROM SURVEY_QUST
            WHERE SURVEY_SEQ = #{surveySeq}
            <if test="@MybatisUtils@isNotEmpty(inQuestFormCd)">
        	AND QUST_FORM_CD IN 
        		<foreach collection="inQuestFormCd" item="val" separator="," open="(" close=")">
                	#{val}
            	</foreach>
        	</if>
        	<if test="@MybatisUtils@isNotEmpty(gtQustSeq)">
        	AND QUST_SEQ &gt; #{gtQustSeq}
        	</if>
            ORDER BY QUST_PRT_ORD
        ) resultSet
        WHERE ROWNUM=1
    </select>

    <select id="selectSurveyQuestion" parameterType="com.skt.mate.model.domain.survey.QustVO" resultType="com.skt.mate.model.domain.survey.QustVO">
        SELECT
        QUST_SEQ AS qustSeq,
        SURVEY_SEQ AS surveySeq,
        QUST_PRT_ORD AS qustPrtOrd,
        MSG_TP_CD AS msgTpCd,
        QUST_CONT AS qustCont,
        QUST_FORM_CD AS qustFormCd,
        QUST_ORD_CL_CD AS qustOrdClCd,
        QUST_RES_CL_CD AS qustResClCd,
        ANS_ERR_NOTI_MSG AS ansErrNotiMsg,
        QUST_IMG_URL AS qustImgUrl,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId
        FROM SURVEY_QUST
        WHERE QUST_SEQ = #{qustSeq}
    </select>

    <select id="selectLastSurveyHistory" parameterType="com.skt.mate.model.domain.survey.SurveyResVO" resultType="com.skt.mate.model.domain.survey.SurveyResVO">
        SELECT * FROM (
            SELECT
            SURVEY_RES_SEQ AS surveyResSeq,
            SURVEY_SEQ AS surveySeq,
            SND_PHONE_NUM AS sndPhoneNum,
            RCVER_PHONE_NUM AS rcverPhoneNum,
            QUST_SEQ AS qustSeq,
            ANS_SEQ AS ansSeq,
            RCV_MSG_SEQ AS rcvMsgSeq,
            SND_MSG_SEQ AS sndMsgSeq,
            MSG_TP_CD AS msgTpCd,
            MSG_CONT AS msgCont,
            CRT_DTTM AS crtDttm
            FROM SURVEY_RES
            WHERE SND_PHONE_NUM = #{sndPhoneNum}
            AND RCVER_PHONE_NUM = #{rcverPhoneNum}
            ORDER BY SURVEY_RES_SEQ DESC
        ) resultSet
        WHERE ROWNUM=1
    </select>

    <update id="updateSurveyJoinInfoVO" parameterType="com.skt.mate.model.domain.survey.SurveyPartcptnVO">
        UPDATE SURVEY_PARTCPTN
        <set>
            UPD_DTTM = sysdate
            <if test="@MybatisUtils@isNotEmpty(surveyComplQustSeq)">
                ,SURVEY_COMPL_QUST_SEQ = #{surveyComplQustSeq}
            </if>
            <if test="@MybatisUtils@isNotEmpty(surveyNextQustSeq)">
                ,SURVEY_NEXT_QUST_SEQ = #{surveyNextQustSeq}
            </if>
            <if test="@MybatisUtils@isNotEmpty(partcptnStateCd)">
                ,PARTCPTN_STATE_CD = #{partcptnStateCd}
            </if>
        </set>
        <where>
            SURVEY_SEQ = #{surveySeq}
            AND RCVER_PHONE_NUM = #{rcverPhoneNum}
        </where>
    </update>

    <select id="selectSurveyAnswer" parameterType="com.skt.mate.model.domain.survey.AnsVO" resultType="com.skt.mate.model.domain.survey.AnsVO">
        SELECT
        ANS_SEQ AS ansSeq,
        QUST_SEQ AS qustSeq,
        ANS_PRT_ORD AS ansPrtOrd,
        ANS_CONT AS ansCont,
        NEXT_QUST_SEQ AS nextQustSeq,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId
        FROM SURVEY_ANS
        WHERE QUST_SEQ = #{qustSeq}
        AND ANS_CONT = #{ansCont}
    </select>
    
    <select id="selectSurveyBookingList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT
	        SURVEY_SEQ AS surveySeq,
	        SURVEY_TITLE AS surveyTitle,
	        SURVEY_START_DTTM AS surveyStartDttm,
	        SURVEY_END_DTTM AS surveyEndDttm,
	        SURVEY_START_DTTM AS surveyStartStr,
	        SURVEY_END_DTTM AS surveyEndStr,
	        TGT_CND_USE_YN AS tgtCndUseYn,
	        TGT_CND_CONT AS tgtCndCont,
	        SURVEY_STATE_CD AS surveyStateCd,
	        NVL(SURVEY_COMPL_TARGET_CNT, 0) AS surveyComplTargetCnt
        FROM SURVEY
        WHERE 1=1
        	AND SURVEY_STATE_CD IN ('REGISTER', 'PRE_CHECK', 'CHECKING')
        	AND TGT_CND_USE_YN = 'Y'
        	<if test="@MybatisUtils@isNotEmpty(surveyStartStr)">
        	AND TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD') = SUBSTR(#{surveyStartStr}, 1, 10)
        	</if>
        	<if test="@MybatisUtils@isNotEmpty(searchStartDate) and @MybatisUtils@isNotEmpty(searchEndDate)">
            AND SURVEY_START_DTTM BETWEEN TO_DATE(#{searchStartDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{searchEndDate}, 'YYYY-MM-DD HH24:MI:SS')
        	</if>
            <!-- AND BOOKING_YN != 'N' -->
            AND BOOKING_YN = 'Y'
        ORDER BY SURVEY_START_DTTM, SURVEY_SEQ
    </select>
    
    <update id="updateSurveyBooking" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE SURVEY
        <!-- SET SURVEY_STATE_UPD_DTTM=SYSDATE -->
        SET UPD_DTTM=SYSDATE
        <if test="@MybatisUtils@isNotEmpty(bookingYn)">
            , BOOKING_YN=#{bookingYn}
        </if>
        <!-- <if test="@MybatisUtils@isNotEmpty(descr)">
            , DESCR=#{descr}
        </if>
        <if test="@MybatisUtils@isEmpty(descr)">
        	, DESCR=null
        </if> -->
        <if test="@MybatisUtils@isNotEmpty(updUserId)">
            , UPD_USER_ID=#{updUserId}
        </if>
        WHERE SURVEY_SEQ=#{surveySeq}
    </update>

    <insert id="insertSurvey" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        <selectKey resultType="Long" keyProperty="surveySeq" order="BEFORE">
            SELECT
            SURVEY_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY(
        SURVEY_SEQ,
        SURVEY_TITLE,
        SURVEY_START_DTTM,
        SURVEY_END_DTTM,
        TGT_CND_USE_YN,
        <if test="@MybatisUtils@equalsByString(tgtCndUseYn, 'Y')">
            TGT_CND_CONT,
        </if>
        <if test="@MybatisUtils@equalsByString(tgtCndUseYn, 'N')">
            RCVER_PHONE_NUM_CNT,
            RCVER_PHONE_NUM_FILE_URL,
            RCVER_PHONE_NUM_UL_DTTM,
        </if>
        SURVEY_SPC_NUM,
        RCV_RJT_PHONE_NUM_CNT,
        RCV_RJT_PHONE_NUM_FILE_URL,
        RCV_RJT_PHONE_NUM_UL_DTTM,
        RCV_RJT_PHN_NM_ORGNL_FL_NM,
        SURVEY_AGRE_GUIDE_MSG,
        <if test="@MybatisUtils@isNotEmpty(surveyAgreImgFilePath)">
            SURVEY_AGRE_IMG_FILE_PATH,
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyAgreTitleMsg)">
            SURVEY_AGRE_TITLE_MSG,
        </if>
        SURVEY_COMPL_GUIDE_MSG,
        <if test="@MybatisUtils@isNotEmpty(surveyComplImgFilePath)">
            SURVEY_COMPL_IMG_FILE_PATH,
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyComplTitleMsg)">
            SURVEY_COMPL_TITLE_MSG,
        </if>
        SURVEY_END_NOTI_MSG,
        SURVEY_STATE_CD,
        ANS_ERR_NOTI_MSG,
        CRT_USER_ID,
        UPD_USER_ID,
        CUSTOM_ID,
        <if test="@MybatisUtils@isNotEmpty(surveyComplTargetCnt)">
            SURVEY_COMPL_TARGET_CNT,
        </if>
        SURVEY_PROJECT_SEQ,
        QUST_NUM_DISP_YN,
        AGRE_COUPON_CD_FILE_URL,
        AGRE_COUPON_FILE_ORGNL_NM,
        AGRE_COUPON_FILE_SIZE,
        AGRE_COUPON_TP_CD,
        AGRE_COUPON_ASSIGN_YN,
        SURVEY_MSG_TP,
        BALANCE_ACCOUNT_CNT
        <if test="@MybatisUtils@isNotEmpty(bookingYn)">
        , BOOKING_YN
        </if>
        )
        VALUES
        (
        #{surveySeq},
        #{surveyTitle},
        TO_DATE(#{surveyStartStr},'YYYY-MM-DD HH24:MI'),
        TO_DATE(#{surveyEndStr},'YYYY-MM-DD HH24:MI'),
        NVL(#{tgtCndUseYn}, 'Y'),
        <if test="@MybatisUtils@equalsByString(tgtCndUseYn, 'Y')">
            #{tgtCndCont},
        </if>
        <if test="@MybatisUtils@equalsByString(tgtCndUseYn, 'N')">
            #{rcverPhoneNumCnt},
            #{rcverPhoneNumFileUrl},
            SYSDATE,
        </if>
        #{surveySpcNum},
        #{rcvRjtPhoneNumCnt},
        #{rcvRjtPhoneNumFileUrl},
        SYSDATE,
        #{rcvRjtPhoneNumOrgnlNm},
        #{surveyAgreGuideMsg},
        <if test="@MybatisUtils@isNotEmpty(surveyAgreImgFilePath)">
            #{surveyAgreImgFilePath},
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyAgreTitleMsg)">
            #{surveyAgreTitleMsg},
        </if>
        #{surveyComplGuideMsg},
        <if test="@MybatisUtils@isNotEmpty(surveyComplImgFilePath)">
            #{surveyComplImgFilePath},
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyComplTitleMsg)">
            #{surveyComplTitleMsg},
        </if>
        #{surveyEndNotiMsg},
        #{surveyStateCd},
        #{ansErrNotiMsg},
        #{crtUserId},
        #{crtUserId},
        #{customId},
        <if test="@MybatisUtils@isNotEmpty(surveyComplTargetCnt)">
            #{surveyComplTargetCnt},
        </if>
        #{surveyProjectSeq},
        #{qustNumYn} ,
        #{agreCouponCdFileUrl},
        #{agreCouponFileOrgnlNm},
        #{agreCouponFileSize},
        #{agreCouponTpCd},
        #{agreCouponAssignYn},
        #{surveyMsgTp},
        #{balanceAccountCnt}
        <if test="@MybatisUtils@isNotEmpty(bookingYn)">
        , #{bookingYn}
        </if>
        )
    </insert>

    <insert id="insertSurveyRcs" parameterType="com.skt.mate.model.domain.survey.SurveyRcsVO">
        <selectKey resultType="Long" keyProperty="rcsSeq" order="BEFORE">
            SELECT
            RCS_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY_RCS(
        RCS_SEQ,
        SURVEY_SEQ,
        RCS_MSG_TYPE,
        SLIDE_CNT,
        <if test="@MybatisUtils@isNotEmpty(titleMsg1)">
	        TITLE_MSG_1,
	        GUIDE_MSG_1,
	        IMG_FILE_PATH_1,
	        IMG_FILE_URL_1,
	    </if>
        <if test="@MybatisUtils@isNotEmpty(titleMsg2)">
	        TITLE_MSG_2,
	        GUIDE_MSG_2,
	        IMG_FILE_PATH_2,
	        IMG_FILE_URL_2,
	    </if>
        <if test="@MybatisUtils@isNotEmpty(titleMsg3)">
	        TITLE_MSG_3,
	        GUIDE_MSG_3,
	        IMG_FILE_PATH_3,
	        IMG_FILE_URL_3,
	    </if>
        <if test="@MybatisUtils@isNotEmpty(titleMsg4)">
	        TITLE_MSG_4,
	        GUIDE_MSG_4,
	        IMG_FILE_PATH_4,
	        IMG_FILE_URL_4,
	    </if>
        <if test="@MybatisUtils@isNotEmpty(titleMsg5)">
	        TITLE_MSG_5,
	        GUIDE_MSG_5,
	        IMG_FILE_PATH_5,
	        IMG_FILE_URL_5,
	    </if>
        <if test="@MybatisUtils@isNotEmpty(titleMsg6)">
	        TITLE_MSG_6,
	        GUIDE_MSG_6,
	        IMG_FILE_PATH_6,
	        IMG_FILE_URL_6,
	    </if>
        FOOTER_PHONE_NUM
        )
        VALUES
        (
        #{rcsSeq},
        #{surveySeq},
        #{rcsMsgTp},
        #{sliceCnt},
        <if test="@MybatisUtils@isNotEmpty(titleMsg1)">
	        #{titleMsg1},
	        #{guideMsg1},
	        #{imgFilePath1},
	        #{imgFileUrl1},
        </if>

		<if test="@MybatisUtils@isNotEmpty(titleMsg2)">
	        #{titleMsg2},
	        #{guideMsg2},
	        #{imgFilePath2},
	        #{imgFileUrl2},
        </if>

		<if test="@MybatisUtils@isNotEmpty(titleMsg3)">	
	        #{titleMsg3},
	        #{guideMsg3},
	        #{imgFilePath3},
	        #{imgFileUrl3},
		</if>
		
		<if test="@MybatisUtils@isNotEmpty(titleMsg4)">
	        #{titleMsg4},
	        #{guideMsg4},
	        #{imgFilePath4},
	        #{imgFileUrl4},
	    </if>

		<if test="@MybatisUtils@isNotEmpty(titleMsg5)">
	        #{titleMsg5},
	        #{guideMsg5},
	        #{imgFilePath5},
	        #{imgFileUrl5},
	    </if>

		<if test="@MybatisUtils@isNotEmpty(titleMsg6)">
	        #{titleMsg6},
	        #{guideMsg6},
	        #{imgFilePath6},
	        #{imgFileUrl6},
	    </if>
	    #{footerPhoneNum}
        )
    </insert>

    <insert id="insertSurveyRcsBtn" parameterType="java.util.List">
        INSERT INTO SURVEY_RCS_BTN
        (
          RCS_SEQ
        , RCS_SLIDE_ORD
        , BTN_TYPE_1
        , BTN_NAME_1
        , ACT_URL_1
        , ACT_PHONE_NUM_1
        , GEO_NAME_1
        , GEO_URL_1
        , BTN_TYPE_2
        , BTN_NAME_2
        , ACT_URL_2
        , ACT_PHONE_NUM_2
        , GEO_NAME_2
        , GEO_URL_2
        )
        SELECT
          A.RCS_SEQ
        , A.RCS_SLIDE_ORD
        , A.BTN_TYPE_1
        , A.BTN_NAME_1
        , A.ACT_URL_1
        , A.ACT_PHONE_NUM_1
        , A.GEO_NAME_1
        , A.GEO_URL_1
        , A.BTN_TYPE_2
        , A.BTN_NAME_2
        , A.ACT_URL_2
        , A.ACT_PHONE_NUM_2
        , A.GEO_NAME_2
        , A.GEO_URL_2
        FROM
        (
        <foreach collection="list" item="item" separator="UNION ALL">
            SELECT
            #{item.rcsSeq} AS RCS_SEQ,
            #{item.rcsSliceOrd} AS RCS_SLIDE_ORD,
            #{item.btnType1} AS BTN_TYPE_1,
            #{item.btnName1} AS BTN_NAME_1,
            #{item.actUrl1} AS ACT_URL_1,
            #{item.actPhoneNum1} AS ACT_PHONE_NUM_1,
            #{item.geoName1} AS GEO_NAME_1,
            #{item.geoURL1} AS GEO_URL_1,
            #{item.btnType2} AS BTN_TYPE_2,
            #{item.btnName2} AS BTN_NAME_2,
            #{item.actUrl2} AS ACT_URL_2,
            #{item.actPhoneNum2} AS ACT_PHONE_NUM_2,
            #{item.geoName2} AS GEO_NAME_2,
            #{item.geoURL2} AS GEO_URL_2
            FROM DUAL
        </foreach>
        ) A
    </insert>
    
    <insert id="insertTestSurveyRcsBtn" parameterType="com.skt.mate.model.domain.survey.SurveyRcsBtnVO">
    	INSERT /*[survey/survey.sqlmap.xml].[insertTestSurveyRcsBtn] */
        INTO SURVEY_RCS_BTN
        (
	          RCS_SEQ
	        , RCS_SLIDE_ORD
	        , BTN_TYPE_1
	        , BTN_NAME_1
	        , ACT_URL_1
	        , ACT_PHONE_NUM_1
	        , GEO_NAME_1
	        , GEO_URL_1
	        , BTN_TYPE_2
	        , BTN_NAME_2
	        , ACT_URL_2
	        , ACT_PHONE_NUM_2
	        , GEO_NAME_2
	        , GEO_URL_2
        )
        SELECT
            #{rcsSeq} AS RCS_SEQ,
            #{rcsSliceOrd} AS RCS_SLIDE_ORD,
            #{btnType1} AS BTN_TYPE_1,
            #{btnName1} AS BTN_NAME_1,
            #{actUrl1} AS ACT_URL_1,
            #{actPhoneNum1} AS ACT_PHONE_NUM_1,
            #{geoName1} AS GEO_NAME_1,
            #{geoURL1} AS GEO_URL_1,
            #{btnType2} AS BTN_TYPE_2,
            #{btnName2} AS BTN_NAME_2,
            #{actUrl2} AS ACT_URL_2,
            #{actPhoneNum2} AS ACT_PHONE_NUM_2,
            #{geoName2} AS GEO_NAME_2,
            #{geoURL2} AS GEO_URL_2
        FROM DUAL
    </insert>

    <update id="updateSurvey" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE SURVEY
        <set>
            SURVEY_TITLE=#{surveyTitle},
            SURVEY_START_DTTM=TO_DATE(#{surveyStartStr},'YYYY-MM-DD HH24:MI'),
            SURVEY_END_DTTM=TO_DATE(#{surveyEndStr},'YYYY-MM-DD HH24:MI'),
            <if test="@MybatisUtils@isNotEmpty(tgtCndUseYn)">
                TGT_CND_USE_YN=#{tgtCndUseYn},
            </if>
            SURVEY_SPC_NUM=#{surveySpcNum},
            TGT_CND_CONT= #{tgtCndCont},
            <if test="@MybatisUtils@isNotEmpty(lastQustSeq)">
                LAST_QUST_SEQ=#{lastQustSeq},
            </if>
            <if test="@MybatisUtils@isNotEmpty(rcvRjtPhoneNumFileUrl)">
                RCV_RJT_PHONE_NUM_FILE_URL=#{rcvRjtPhoneNumFileUrl},
                RCV_RJT_PHONE_NUM_UL_DTTM=#{rcvRjtPhoneNumUlDttm},
                RCV_RJT_PHONE_NUM_CNT=#{rcvRjtPhoneNumCnt},
                RCV_RJT_PHN_NM_ORGNL_FL_NM=#{rcvRjtPhoneNumOrgnlNm},
            </if>
            <if test="@MybatisUtils@equalsByString(tgtCndUseYn, 'N') and @MybatisUtils@isNotEmpty(rcverPhoneNumFileUrl)">
                RCVER_PHONE_NUM_FILE_URL=#{rcverPhoneNumFileUrl},
                RCVER_PHONE_NUM_UL_DTTM=#{rcverPhoneNumUlDttm},
                RCVER_PHONE_NUM_CNT=#{rcverPhoneNumCnt},
            </if>
            SURVEY_AGRE_GUIDE_MSG=#{surveyAgreGuideMsg},
            SURVEY_AGRE_IMG_FILE_PATH=#{surveyAgreImgFilePath},
            SURVEY_AGRE_TITLE_MSG=#{surveyAgreTitleMsg},
            SURVEY_COMPL_GUIDE_MSG=#{surveyComplGuideMsg},
            SURVEY_COMPL_IMG_FILE_PATH=#{surveyComplImgFilePath},
            SURVEY_COMPL_TITLE_MSG=#{surveyComplTitleMsg},
            SURVEY_END_NOTI_MSG=#{surveyEndNotiMsg},
            SURVEY_STATE_CD=#{surveyStateCd},
            ANS_ERR_NOTI_MSG=#{ansErrNotiMsg},
            UPD_DTTM=SYSDATE,
            SURVEY_COMPL_TARGET_CNT=#{surveyComplTargetCnt},
            UPD_USER_ID=#{updUserId},
            SURVEY_PROJECT_SEQ=#{surveyProjectSeq},
            QUST_NUM_DISP_YN=#{qustNumYn},
            AGRE_COUPON_CD_FILE_URL=#{agreCouponCdFileUrl},
            AGRE_COUPON_FILE_ORGNL_NM=#{agreCouponFileOrgnlNm},
            AGRE_COUPON_FILE_SIZE=#{agreCouponFileSize},
            AGRE_COUPON_ASSIGN_YN=#{agreCouponAssignYn},
            DESCR=#{descr},
            SURVEY_MSG_TP=#{surveyMsgTp},
            BALANCE_ACCOUNT_CNT=#{balanceAccountCnt}
            <if test="@MybatisUtils@isNotEmpty(bookingYn)">
	     	   , BOOKING_YN =#{bookingYn}
	        </if>
        </set>
        WHERE SURVEY_SEQ=#{surveySeq}
    </update>
    <update id="updateSurveyRcs" parameterType="com.skt.mate.model.domain.survey.SurveyRcsVO">
        UPDATE SURVEY_RCS
        <set>
	          SURVEY_SEQ = #{surveySeq}
	        , RCS_MSG_TYPE = #{rcsMsgTp}
	        , SLIDE_CNT = #{sliceCnt}
	        <if test="@MybatisUtils@isNotEmpty(titleMsg1)">
		        , TITLE_MSG_1 = #{titleMsg1}
		        , GUIDE_MSG_1 = #{guideMsg1}
		        , IMG_FILE_URL_1 = #{imgFileUrl1}
		    </if>
	        <if test="@MybatisUtils@isNotEmpty(titleMsg2)">
		        , TITLE_MSG_2 = #{titleMsg2}
		        , GUIDE_MSG_2 = #{guideMsg2}
		        , IMG_FILE_URL_2 = #{imgFileUrl2}
		    </if>
	        <if test="@MybatisUtils@isNotEmpty(titleMsg3)">
		        , TITLE_MSG_3 = #{titleMsg3}
		        , GUIDE_MSG_3 = #{guideMsg3}
		        , IMG_FILE_URL_3 = #{imgFileUrl3}
		    </if>
	        <if test="@MybatisUtils@isNotEmpty(titleMsg4)">
		        , TITLE_MSG_4 = #{titleMsg4}
		        , GUIDE_MSG_4 = #{guideMsg4}
		        , IMG_FILE_URL_4 = #{imgFileUrl4}
		    </if>
	        <if test="@MybatisUtils@isNotEmpty(titleMsg5)">
		        , TITLE_MSG_5 = #{titleMsg5}
		        , GUIDE_MSG_5 = #{guideMsg5}
		        , IMG_FILE_URL_5 = #{imgFileUrl5}
		    </if>
	        <if test="@MybatisUtils@isNotEmpty(titleMsg6)">
		        , TITLE_MSG_6 = #{titleMsg6}
		        , GUIDE_MSG_6 = #{guideMsg6}
		        , IMG_FILE_URL_6 = #{imgFileUrl6}
		    </if>
        </set>
        WHERE RCS_SEQ=#{rcsSeq}
    </update>
    <update id="updateSurveyForTarget" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE SURVEY
        <set>
            RCVER_PHONE_NUM_CNT=#{rcverPhoneNumCnt},
            RCVER_PHONE_NUM_FILE_URL=#{rcverPhoneNumFileUrl},
            RCVER_PHONE_NUM_UL_DTTM=SYSDATE,
            SURVEY_STATE_CD=#{surveyStateCd},
            UPD_DTTM=SYSDATE,
            <if test="@MybatisUtils@equalsByString(surveyStateCd, 'APPR') and @MybatisUtils@isNotEmpty(apprUserId)">
                APPR_USER_ID=#{apprUserId},
            </if>
            <if test="@MybatisUtils@equalsByString(surveyStateCd, 'PRE_CHECK') and @MybatisUtils@isNotEmpty(apprUserId)">
                APPR_USER_ID=#{apprUserId},
            </if>
            <if test="@MybatisUtils@isNotEmpty(bookingYn)">
		        BOOKING_YN=#{bookingYn},
		    </if>
            UPD_USER_ID=#{crtUserId}
        </set>
        WHERE SURVEY_SEQ=#{surveySeq}
    </update>
    <insert id="insertSurveyQuestion" parameterType="com.skt.mate.model.domain.survey.QustVO">
        <selectKey resultType="Long" keyProperty="qustSeq" order="BEFORE">
            SELECT
            SURVEY_QUST_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY_QUST(
        QUST_SEQ,
        SURVEY_SEQ,
        QUST_PRT_ORD,
        QUST_CONT,
        QUST_FORM_CD,
        QUST_ORD_CL_CD,
        QUST_RES_CL_CD,
        <if test="@MybatisUtils@isNotEmpty(qustImgUrl)">
            MSG_TP_CD,
        </if>
        ANS_ERR_NOTI_MSG,
        QUST_IMG_URL,
        CRT_USER_ID,
        UPD_USER_ID,
        COUPON_TITLE_MSG,
        COUPON_CD_FILE_URL,
        COUPON_FILE_ORGNL_NM,
        COUPON_FILE_SIZE,
        COUPON_TP_CD,
        REF_QUST_SEQ
        )
        VALUES
        (
        #{qustSeq},
        #{surveySeq},
        #{qustPrtOrd},
        #{qustCont},
        #{qustFormCd},
        #{qustOrdClCd},
        #{qustResClCd},
        <if test="@MybatisUtils@isNotEmpty(qustImgUrl)">
            'MMS',
        </if>
        #{ansErrNotiMsg},
        #{qustImgUrl},
        #{crtUserId},
        #{crtUserId},
        #{couponTitleMsg},
        #{couponCdFileUrl},
        #{couponFileOrgnlNm},
        #{couponFileSize},
        #{couponTpCd},
        #{refQustSeq}
        )
    </insert>

    <insert id="insertSurveyAnswer" parameterType="com.skt.mate.model.domain.survey.AnsVO">
        <selectKey resultType="Long" keyProperty="ansSeq" order="BEFORE">
            SELECT
            SURVEY_ANS_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY_ANS(
        ANS_SEQ,
        QUST_SEQ,
        ANS_PRT_ORD,
        <if test="@MybatisUtils@isNotEmpty(ansCont)">
            ANS_CONT,
        </if>
        <if test="@MybatisUtils@isNotEmpty(nextQustSeq)">
            NEXT_QUST_SEQ,
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyComplGuideMsg)">
            SURVEY_COMPL_GUIDE_MSG,
        </if>
        <if test="@MybatisUtils@isNotEmpty(couponTotRcvYn)">
            COUPON_TOT_RCV_YN,
        </if>
        <if test="@MybatisUtils@isNotEmpty(nextQustStepYn)">
            NEXT_QUST_STEP_YN,
        </if>
        CRT_USER_ID,
        UPD_USER_ID
        )
        VALUES
        (
        #{ansSeq},
        #{qustSeq},
        #{ansPrtOrd},
        <if test="@MybatisUtils@isNotEmpty(ansCont)">
            #{ansCont},
        </if>
        <if test="@MybatisUtils@isNotEmpty(nextQustSeq)">
            #{nextQustSeq},
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyComplGuideMsg)">
            #{surveyComplGuideMsg},
        </if>
        <if test="@MybatisUtils@isNotEmpty(couponTotRcvYn)">
            #{couponTotRcvYn},
        </if>
        <if test="@MybatisUtils@isNotEmpty(nextQustStepYn)">
            #{nextQustStepYn},
        </if>
        #{crtUserId},
        #{crtUserId}
        )
    </insert>

    <select id="selectSurveyAnserList" parameterType="Long" resultType="com.skt.mate.model.domain.survey.AnsVO">
        SELECT
        ANS_SEQ AS ansSeq,
        QUST_SEQ AS qustSeq,
        ANS_PRT_ORD AS ansPrtOrd,
        ANS_CONT AS ansCont,
        NEXT_QUST_SEQ AS nextQustSeq,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId,
        SURVEY_COMPL_GUIDE_MSG AS surveyComplGuideMsg,
        COUPON_TOT_RCV_YN AS couponTotRcvYn,
        NEXT_QUST_STEP_YN AS nextQustStepYn
        FROM SURVEY_ANS
        <if test="qustSeqs.size > 0">
            WHERE QUST_SEQ in
        </if>
        <foreach collection="qustSeqs" item="item" separator="," open="(" close=")">
            #{item.value}
        </foreach>
        ORDER BY ANS_SEQ
    </select>

    <sql id="surveyCondition">
        <if test="@MybatisUtils@isNotEmpty(tgtCndUseYn)">
            AND TGT_CND_USE_YN=#{tgtCndUseYn}
        </if>
        <if test="@MybatisUtils@isEmpty(surveyStateCd)">
            AND s.SURVEY_STATE_CD != 'TEMP_SAVE'
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyTitle)">
            AND s.SURVEY_TITLE like '%' || #{surveyTitle} || '%'
        </if>
        <if test="@MybatisUtils@isNotEmpty(insNm)">
            AND u.USER_NM = #{insNm}
        </if>
        <if test="@MybatisUtils@equalsByString(searchType, 'startDay')">
            AND s.SURVEY_START_DTTM BETWEEN TO_CHAR(TO_DATE(#{searchStartDate}, 'YYYY-MM-DD'), 'YYYYMMDD') AND TO_CHAR(TO_DATE(#{searchEndDate}, 'YYYY-MM-DD')+1, 'YYYYMMDD')
        </if>
        <if test="@MybatisUtils@equalsByString(searchType, 'endDay')">
            AND s.SURVEY_END_DTTM BETWEEN TO_CHAR(TO_DATE(#{searchStartDate}, 'YYYY-MM-DD'), 'YYYYMMDD') AND TO_CHAR(TO_DATE(#{searchEndDate}, 'YYYY-MM-DD')+1, 'YYYYMMDD')
        </if>
        <if test="@MybatisUtils@isNotEmpty(customId) and @MybatisUtils@isEmpty(customIdList)">
            AND s.CUSTOM_ID=#{customId}
        </if>
        <if test="@MybatisUtils@isNotEmpty(customIdList)">
            AND s.CUSTOM_ID IN <foreach collection="customIdList" item="val" separator="," open="(" close=")">#{val}</foreach>
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveySpcNum)">
            AND SURVEY_SPC_NUM = #{surveySpcNum}
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyProjectNm)">
            AND p.SURVEY_PROJECT_NM like '%' || #{surveyProjectNm} || '%'
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveyProjectId)">
            AND p.SURVEY_PROJECT_ID like '%' || #{surveyProjectId} || '%'
        </if>
        <if test="@MybatisUtils@isNotEmpty(crtUserId)">
            AND s.CRT_USER_ID= #{crtUserId}
        </if>
    </sql>
    <sql id="surveyConditionOfRequest">
        <include refid="surveyCondition"></include>
        <if test="@MybatisUtils@isEmpty(searchType)">
            AND s.CRT_DTTM BETWEEN TO_CHAR(TO_DATE(#{searchStartDate}, 'YYYY-MM-DD'), 'YYYYMMDD') AND TO_CHAR(TO_DATE(#{searchEndDate}, 'YYYY-MM-DD')+1, 'YYYYMMDD')
        </if>
        <if test="@MybatisUtils@isNotEmpty(rlcId)">
            AND c.rlc_id=#{rlcId}
        </if>
        <if test="@MybatisUtils@isNotEmpty(dlcId)">
            AND c.dlc_id=#{dlcId}
        </if>
        <if test="@MybatisUtils@isNotEmpty(mgmtTp)">
            AND c.MGMTC_TP=#{mgmtTp}
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'REQ_ALL')">
            AND SURVEY_STATE_CD in ('REGISTER', 'REJECT')
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'APPR')">
            AND SURVEY_STATE_CD in ('APPR', 'PRE_CHECK', 'CHECKING')
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'LIST_ALL')">
            AND SURVEY_STATE_CD in ('APPR', 'CANCEL', 'RUNNING', 'AUTO_END', 'MANUAL_END', 'PRE_CHECK', 'CHECKING')
        </if>
        <if test="@MybatisUtils@isNotEqualsByString(surveyStateCd, 'REQ_ALL') and @MybatisUtils@isNotEqualsByString(surveyStateCd, 'LIST_ALL') 
        	and @MybatisUtils@isNotEqualsByString(surveyStateCd, 'STOP') and @MybatisUtils@isNotEqualsByString(surveyStateCd, 'APPR')">
            AND SURVEY_STATE_CD = #{surveyStateCd}
            <if test ="@MybatisUtils@equalsByString(surveyStateCd, 'REJECT')">
            	AND NVL(DESCR, ' ') <![CDATA[<>]]> 'CSP 대사오류'
            </if>
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'STOP')">
            AND SURVEY_STATE_CD = 'REJECT'
            AND DESCR = 'CSP 대사오류'
        </if>
        
    </sql>
    <select id="getSurveyTotalCount" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
        SELECT  /* [survey.survey.sqlmap.xml].[getSurveyTotalCount] */
        COUNT(*)
        FROM SURVEY s
        INNER JOIN SYSTEM_USER u
        ON s.CRT_USER_ID=u.USER_ID
        INNER JOIN SURVEY_PROJECT p
        ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
        WHERE s.TEST_SURVEY_YN = 'N'
        <include refid="surveyCondition"></include>
        <if test="@MybatisUtils@isNotEmpty(surveyStateCd)">
            <choose>
                <when test="@MybatisUtils@equalsByString(surveyStateCd, 'STOP')">
                    AND SURVEY_STATE_CD = 'REJECT'
                    AND DESCR = 'CSP 대사오류'
                </when>
                <when test="@MybatisUtils@equalsByString(surveyStateCd, 'APPR')">
                    AND SURVEY_STATE_CD IN ('PRE_CHECK', 'CHECKING')
                </when>
                <otherwise>
                    AND SURVEY_STATE_CD = #{surveyStateCd}
                    <if test ="@MybatisUtils@equalsByString(surveyStateCd, 'REJECT')">
		            	AND NVL(DESCR, ' ') <![CDATA[<>]]> 'CSP 대사오류'
		            </if>
                </otherwise>
            </choose>
        </if>
    </select>
    <select id="selectSurveyList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT * /* [survey.survey.sqlmap.xml].[selectSurveyList] */
        FROM (
        SELECT ROWNUM AS RNUM
        ,A.*
        FROM(
        SELECT
        s.SURVEY_SEQ AS surveySeq,
        s.SURVEY_TITLE AS surveyTitle,
        TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyStartStr,
        TO_CHAR(SURVEY_END_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyEndStr,
        s.TGT_CND_USE_YN AS tgtCndUseYn,
        s.TGT_CND_CONT AS tgtCndCont,
        s.LAST_QUST_SEQ AS lastQustSeq,
        s.SURVEY_SPC_NUM AS surveySpcNum,
        s.RCVER_PHONE_NUM_CNT AS rcverPhoneNumCnt,
        s.RCV_RJT_PHONE_NUM_CNT AS rcvRjtPhoneNumCnt,
        s.RCVER_PHONE_NUM_FILE_URL AS rcverPhoneNumFileUrl,
        s.RCVER_PHONE_NUM_UL_DTTM AS rcverPhoneNumUlDttm,
        s.RCV_RJT_PHONE_NUM_FILE_URL AS rcvRjtPhoneNumFileUrl,
        s.RCV_RJT_PHONE_NUM_UL_DTTM AS rcvRjtPhoneNumUlDttm,
        s.SURVEY_AGRE_GUIDE_MSG AS surveyAgreGuideMsg,
        s.SURVEY_COMPL_GUIDE_MSG AS surveyComplGuideMsg,
        s.SURVEY_END_NOTI_MSG AS surveyEndNotiMsg,
        s.SURVEY_STATE_CD AS surveyStateCd,
        s.ANS_ERR_NOTI_MSG AS ansErrNotiMsg,
        s.DESCR AS descr,
        s.CUSTOM_ID AS customId,
        u.USER_NM AS insNm,
        s.CRT_DTTM AS crtDttm,
        s.UPD_DTTM AS updDttm,
        s.CRT_USER_ID AS crtUserId,
        (SELECT COUNT(*) FROM SURVEY_PARTCPTN r WHERE r.SURVEY_SEQ=s.SURVEY_SEQ AND r.PARTCPTN_STATE_CD in ('ANSING', 'COMPL')) as resultCount,
        p.SURVEY_PROJECT_ID AS surveyProjectId,
        p.SURVEY_PROJECT_NM AS surveyProjectNm,
        NVL(s.SURVEY_COMPL_TARGET_CNT, 0) as surveyComplTargetCnt,
		CASE
		    WHEN r.RCS_MSG_TYPE = 'LMS002' THEN 'RCS_LMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS004' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS007' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS008' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS009' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS010' THEN 'RCS_MMS'
		    ELSE s.SURVEY_MSG_TP
		END as surveyMsgTp,
        NVL(s.BALANCE_ACCOUNT_CNT, 0) as balanceAccountCnt
        FROM SURVEY s
        INNER JOIN SYSTEM_USER u
        ON s.CRT_USER_ID=u.USER_ID
        INNER JOIN SURVEY_PROJECT p
        ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
        LEFT OUTER JOIN SURVEY_RCS r ON s.SURVEY_SEQ = r.SURVEY_SEQ
        WHERE s.TEST_SURVEY_YN = 'N'
        <include refid="surveyCondition"></include>
        <if test="@MybatisUtils@isNotEmpty(surveyStateCd)">
        	<choose>
                <when test="@MybatisUtils@equalsByString(surveyStateCd, 'STOP')">
                    AND SURVEY_STATE_CD = 'REJECT'
                    AND DESCR = 'CSP 대사오류'
                </when>
                <when test="@MybatisUtils@equalsByString(surveyStateCd, 'APPR')">
                    AND SURVEY_STATE_CD IN ('PRE_CHECK', 'CHECKING', 'APPR')
                </when>
                <otherwise>
                    AND SURVEY_STATE_CD = #{surveyStateCd}
                    <if test ="@MybatisUtils@equalsByString(surveyStateCd, 'REJECT')">
		            	AND NVL(DESCR, ' ') <![CDATA[<>]]> 'CSP 대사오류'
		            </if>
                </otherwise>
            </choose>
            
        </if>
        <if test="@MybatisUtils@isNotEmpty(ord1)">
            <choose>
                <when test="@MybatisUtils@equalsByString('ASC', ord1)">
                    ORDER BY SURVEY_START_DTTM ASC, s.SURVEY_SEQ DESC
                </when>
                <otherwise>
                    ORDER BY SURVEY_START_DTTM DESC, s.SURVEY_SEQ DESC
                </otherwise>
            </choose>
        </if>
        <if test="@MybatisUtils@isNotEmpty(ord3)">
            <choose>
                <when test="@MybatisUtils@equalsByString('ASC', ord3)">
                    ORDER BY SURVEY_END_DTTM ASC, s.SURVEY_SEQ DESC
                </when>
                <otherwise>
                    ORDER BY SURVEY_END_DTTM DESC, s.SURVEY_SEQ DESC
                </otherwise>
            </choose>
        </if>
        <if test="@MybatisUtils@isNotEmpty(ord2)">
            ORDER BY s.SURVEY_SEQ DESC
        </if>
        ) A WHERE ROWNUM &lt;= #{maxRowNum}
        ) WHERE RNUM &gt; #{minRowNum}
    </select>

    <select id="getSurveyTotalCountOfAdmin" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
        SELECT  /* [survey.survey.sqlmap.xml].[getSurveyTotalCountOfAdmin] */
        COUNT(*)
        FROM SURVEY s
        INNER JOIN SYSTEM_USER u
        ON s.CUSTOM_ID=u.USER_ID
        INNER JOIN CUSTOM c
        ON s.CUSTOM_ID=c.USER_ID
        INNER JOIN SURVEY_PROJECT p
        ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
        WHERE s.TEST_SURVEY_YN = 'N'
        <include refid="surveyConditionOfRequest"></include>
    </select>

    <select id="selectSurveyListOfAdmin" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT * /* [survey.survey.sqlmap.xml].[selectSurveyListOfAdmin] */
        FROM (
        SELECT ROWNUM AS RNUM
        ,A.*
        FROM(
        SELECT
        s.SURVEY_SEQ AS surveySeq,
        SURVEY_TITLE AS surveyTitle,
        (SELECT RLC_DISP_NM FROM RLC r WHERE r.RLC_ID=c.RLC_ID ) AS rlcNm,
        (SELECT DLC_DISP_NM FROM DLC d WHERE d.DLC_ID=c.DLC_ID ) AS dlcNm,
        TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyStartStr,
        TO_CHAR(SURVEY_END_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyEndStr,
        TGT_CND_USE_YN AS tgtCndUseYn,
        TGT_CND_CONT AS tgtCndCont,
        LAST_QUST_SEQ AS lastQustSeq,
        SURVEY_SPC_NUM AS surveySpcNum,
        RCVER_PHONE_NUM_CNT AS rcverPhoneNumCnt,
        RCV_RJT_PHONE_NUM_CNT AS rcvRjtPhoneNumCnt,
        RCVER_PHONE_NUM_FILE_URL AS rcverPhoneNumFileUrl,
        RCVER_PHONE_NUM_UL_DTTM AS rcverPhoneNumUlDttm,
        RCV_RJT_PHONE_NUM_FILE_URL AS rcvRjtPhoneNumFileUrl,
        RCV_RJT_PHONE_NUM_UL_DTTM AS rcvRjtPhoneNumUlDttm,
        SURVEY_AGRE_GUIDE_MSG AS surveyAgreGuideMsg,
        SURVEY_COMPL_GUIDE_MSG AS surveyComplGuideMsg,
        SURVEY_END_NOTI_MSG AS surveyEndNotiMsg,
        SURVEY_STATE_CD AS surveyStateCd,
        ANS_ERR_NOTI_MSG AS ansErrNotiMsg,
        s.DESCR AS descr,
        s.CUSTOM_ID AS customId,
        (SELECT a.LOGIN_EMAIL FROM ADMIN a WHERE s.APPR_USER_ID=a.USER_ID) as apprUserNm,
        (SELECT b.LOGIN_ID FROM CUSTOM_CONTACT b WHERE b.USER_ID = s.CRT_USER_ID) AS loginId,
        u.user_nm AS customNm,
        s.CRT_DTTM AS crtDttm,
        s.UPD_DTTM AS updDttm,
        (SELECT COUNT(*) FROM SURVEY_PARTCPTN r WHERE r.SURVEY_SEQ=s.SURVEY_SEQ AND r.PARTCPTN_STATE_CD in ('ANSING', 'COMPL')) as resultCount,
        p.SURVEY_PROJECT_ID AS surveyProjectId,
        p.SURVEY_PROJECT_NM AS surveyProjectNm,
        NVL(s.SURVEY_COMPL_TARGET_CNT, 0) AS surveyComplTargetCnt,
        s.AGRE_COUPON_ASSIGN_YN as agreCouponAssignYn,
        s.AGRE_COUPON_CD_FILE_URL as agreCouponCdFileUrl,
        s.BOOKING_YN as bookingYn,
		CASE
		    WHEN r.RCS_MSG_TYPE = 'LMS002' THEN 'RCS_LMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS004' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS007' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS008' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS009' THEN 'RCS_MMS'
		    WHEN r.RCS_MSG_TYPE = 'MMS010' THEN 'RCS_MMS'
		    ELSE s.SURVEY_MSG_TP
		END as surveyMsgTp,
        NVL(s.BALANCE_ACCOUNT_CNT, 0) as balanceAccountCnt
        FROM SURVEY s
        INNER JOIN SYSTEM_USER u
        ON s.CUSTOM_ID=u.USER_ID
        INNER JOIN CUSTOM c
        ON s.CUSTOM_ID=c.USER_ID
        INNER JOIN SURVEY_PROJECT p
        ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
        LEFT OUTER JOIN SURVEY_RCS r ON s.SURVEY_SEQ = r.SURVEY_SEQ
        WHERE s.TEST_SURVEY_YN = 'N'
        <include refid="surveyConditionOfRequest"></include>
        <!-- ORDER BY s.SURVEY_SEQ DESC -->
        <if test="@MybatisUtils@isNotEmpty(ord1)">
            <choose>
                <when test="@MybatisUtils@equalsByString('ASC', ord1)">
                    ORDER BY SURVEY_START_DTTM ASC, s.SURVEY_SEQ DESC
                </when>
                <otherwise>
                    ORDER BY SURVEY_START_DTTM DESC, s.SURVEY_SEQ DESC
                </otherwise>
            </choose>
        </if>
        ) A WHERE ROWNUM &lt;= #{maxRowNum}
        ) WHERE RNUM &gt; #{minRowNum}
    </select>

    <delete id="deleteSurvey" parameterType="Long">
        DELETE FROM SURVEY
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>
    
    <delete id="deleteSurveyRcs" parameterType="Long">
        DELETE FROM SURVEY_RCS
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <delete id="deleteSurveyRcsBtn" parameterType="Long">
        DELETE FROM SURVEY_RCS_BTN
        WHERE RCS_SEQ=#{rcsSeq}
    </delete>

    <delete id="deleteSurveyQuestions" parameterType="Long">
        DELETE FROM SURVEY_QUST
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <delete id="deleteSurveyAnswers" parameterType="Long">
        DELETE FROM SURVEY_ANS
        WHERE QUST_SEQ in
        <foreach collection="qustSeqs" item="item" separator="," open="(" close=")">
            #{item.value}
        </foreach>
    </delete>

    <select id="selectSurveyQuestionSeqs" parameterType="Long" resultType="Long">
        SELECT QUST_SEQ
        FROM SURVEY_QUST
        WHERE SURVEY_SEQ=#{surveySeq}
    </select>

    <select id="selectSurveyTarget" resultType="String">
        SELECT RCVER_PHONE_NUM
        FROM SURVEY_TRGTER
        WHERE SURVEY_SEQ=#{surveySeq}
        AND RCV_RGT_YN='N'
    </select>

    <select id="selectSurveyTargetList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="String">
        SELECT           /* [survey.survey.sqlmap.xml].[selectSurveyTargetList] */
                rcverPhoneNum
        FROM
                (
                SELECT
                        ROWNUM AS rnum
                    ,   a.rcverPhoneNum AS rcverPhoneNum
                FROM
                        (
                        SELECT
                                rcver_phone_num AS rcverPhoneNum
                        FROM
                                survey_trgter
                        WHERE
                                survey_seq = #{surveySeq}
                        ) a
                WHERE
                        ROWNUM &lt; = #{maxRowNum}
                )
        WHERE
                rnum &gt; #{minRowNum}
    </select>

    <select id="selectSurveyTargetTotalCount" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
        SELECT           /* [survey.survey.sqlmap.xml].[selectSurveyTargetTotalCount] */
                COUNT(1)
        FROM
                survey_trgter
        WHERE
                survey_seq = #{surveySeq}
    </select>

    <insert id="insertSurveyTarget" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        INSERT ALL
        <foreach collection="rcverList" item="item" >
            INTO SURVEY_TRGTER
            (
            SURVEY_SEQ,
            RCVER_PHONE_NUM,
            RCV_RJT_YN,
            CRT_USER_ID,
            UPD_USER_ID
            )
            VALUES
            (
            #{surveySeq},
            #{item},
            'N',
            #{crtUserId},
            #{crtUserId}
            )
        </foreach>
        SELECT * FROM DUAL
    </insert>

    <insert id="insertSurveyTempTarget" parameterType="java.util.List">
        INSERT ALL
        <foreach collection="list" item="item" >
		INTO SURVEY_TEMP_TRGTER (
            SURVEY_SEQ,
            RCVER_PHONE_NUM,
            RCV_RJT_YN,
            CRT_USER_ID,
            CRT_DTTM
            )
		VALUES (
            #{item.surveySeq},
            #{item.rcverPhoneNum},
            'N',
            #{item.crtUserId},
            SYSDATE
		)
        </foreach>
        SELECT * FROM DUAL
    </insert>
    
    <insert id="insertSurveyTargetAddInfo" parameterType="java.util.List">
    	INSERT ALL
    	<foreach collection="list" item="item">
    	INTO SURVEY_TRGTER_ADINFO (
			SURVEY_SEQ
            , RCVER_PHONE_NUM
            , GENDER_CD
            , AGE_VAL
            , ADDR
            , OS_NM
            , CRT_DTTM
    	) VALUES (
    		 #{item.surveySeq}
    		 , #{item.rcverPhoneNum}
    		 , #{item.genderCd}
    		 , #{item.ageVal}
    		 , #{item.addr}
    		 , #{item.osNm}
    		 , SYSDATE
    	)	
    	</foreach>
    	SELECT * FROM DUAL
    </insert>
    
    
    <insert id="insertSurveyRjtTarget" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        INSERT ALL
        <foreach collection="rcverRjtList" item="item" >
            INTO SURVEY_RCV_RJTER
            (
            SURVEY_SEQ,
            RCV_RJT_PHONE_NUM,
            CRT_USER_ID,
            UPD_USER_ID
            )
            VALUES
            (
            #{surveySeq},
            #{item},
            #{crtUserId},
            #{crtUserId}
            )
        </foreach>
        SELECT * FROM DUAL
    </insert>

    <delete id="deleteSurveyTarget">
        DELETE FROM SURVEY_TRGTER
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <delete id="deleteSurveyRjtTarget">
        DELETE FROM SURVEY_RCV_RJTER
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>
    
    <delete id="deleteSurveyTargetAddInfo" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
    	DELETE FROM SURVEY_TRGTER_ADINFO
    	WHERE SURVEY_SEQ = #{surveySeq}
    </delete>

    <update id="updateSurveyTarget" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE
        SURVEY_TRGTER A
        SET  A.RCV_RJT_YN ='Y'
        WHERE EXISTS ( SELECT 1
        FROM SURVEY_RCV_RJTER B
        WHERE A.RCVER_PHONE_NUM = B.RCV_RJT_PHONE_NUM
        AND A.SURVEY_SEQ = B.SURVEY_SEQ )
        AND A.SURVEY_SEQ =#{surveySeq}
    </update>

    <update id="compareSurveyTargetReject" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE
        SURVEY_TEMP_TRGTER A
        SET  A.RCV_RJT_YN ='Y'
        WHERE EXISTS ( SELECT 1
        FROM SURVEY_RCV_RJTER B
        WHERE A.RCVER_PHONE_NUM = B.RCV_RJT_PHONE_NUM
        AND A.SURVEY_SEQ = B.SURVEY_SEQ )
        AND A.SURVEY_SEQ =#{surveySeq}
    </update>
    
    <update id="compareSurveyTargetDuplicate" parameterType="Long">
    <![CDATA[
    	MERGE INTO /*[survey/survey.sqlmap.xml].[compareSurveyTargetDuplicate] */ 
    		survey_temp_trgter tgt
		USING (
			WITH st AS (
	        	SELECT survey_seq, GREATEST(survey_start_dttm, SYSDATE) AS survey_start_dttm , survey_end_dttm
				FROM survey
	            WHERE survey_seq = #{surveySeq}
			)
			SELECT
				survey_seq, rcver_phone_num, MAX(dup_survey_seq) AS dup_survey_seq
			FROM (
	    		SELECT 
	        		tgt.survey_seq, tgt.rcver_phone_num
	        		, NVL(run.survey_seq, apr.survey_seq) AS dup_survey_seq
	    		FROM (
	        		SELECT 
	        			survey_seq, rcver_phone_num
	        		FROM survey_temp_trgter
	        		WHERE survey_seq = #{surveySeq}
	        		AND rcv_rjt_yn = 'N'
	    		) tgt   
	    		LEFT OUTER JOIN (
	        		SELECT 
	            		tgt.survey_seq, tgt.rcver_phone_num
	        		FROM survey_trgter tgt
	        		INNER JOIN survey s ON tgt.survey_seq = s.survey_seq
	        		INNER JOIN SURVEY_PARTCPTN SP ON TGT.SURVEY_SEQ = SP.SURVEY_SEQ AND TGT.RCVER_PHONE_NUM = SP.RCVER_PHONE_NUM	        		
	        		CROSS JOIN st st
	        		WHERE survey_state_cd IN ('RUNNING', 'AUTO_END', 'MANUAL_END')
	        		AND rcv_rjt_yn = 'N'
	        		AND dup_rcver_yn = 'N'
	        		AND ( 
	         			( ( test_survey_yn = 'N' AND s.survey_end_dttm+8/24 > st.survey_start_dttm ) OR ( test_survey_yn = 'Y' AND s.survey_end_dttm+10/(24*60) > st.survey_start_dttm ) )
	         			OR
	         			  ( test_survey_yn = 'N' AND ROUND((s.survey_end_dttm - s.survey_start_dttm) * 24) < 60 AND ROUND(( st.survey_start_dttm - s.survey_start_dttm) * 24) < 60 ) 
	            	)
	            	AND ( 
                    	(test_survey_yn = 'Y' AND sp.PARTCPTN_STATE_CD NOT IN ('COMPL', 'SCR')) 
                    	OR 
                    	(test_survey_yn = 'N' AND (
                        	( (s.survey_state_cd = 'RUNNING' AND (sp.PARTCPTN_STATE_CD NOT IN ('COMPL', 'SCR') OR (sp.PARTCPTN_STATE_CD IN ('COMPL', 'SCR') AND ROUND((st.survey_start_dttm - sp.upd_dttm) * 24) < 60))))
                        	OR
                        	(s.survey_state_cd IN ('AUTO_END', 'MANUAL_END') AND ROUND((st.survey_start_dttm - sp.upd_dttm) * 24) < 60)
                    	))
                	)		
	    		) run ON run.rcver_phone_num = tgt.rcver_phone_num
	    		LEFT OUTER JOIN (
	        		SELECT 
	            		tgt.survey_seq, rcver_phone_num
	        		FROM survey_trgter tgt
	        		INNER JOIN survey s ON tgt.survey_seq = s.survey_seq
	        		CROSS JOIN st st
	        		WHERE (survey_state_cd = 'APPR' OR survey_state_cd = 'PRE_CHECK' OR survey_state_cd = 'CHECKING')
	        		AND rcv_rjt_yn = 'N'
	        		AND (   ( test_survey_yn = 'N' and s.survey_end_dttm+8/24 > st.survey_start_dttm )
	               	     OR ( test_survey_yn = 'Y' and s.survey_end_dttm+10/(24*60) > st.survey_start_dttm ) 
	               	)
	          		AND s.survey_start_dttm <= st.survey_end_dttm+8/24
	    		) apr ON apr.rcver_phone_num = tgt.rcver_phone_num	          	
			) GROUP BY survey_seq, rcver_phone_num
		) cmp
		ON ( tgt.survey_seq = cmp.survey_seq and tgt.rcver_phone_num = cmp.rcver_phone_num )
		WHEN MATCHED THEN
		UPDATE SET
    		tgt.dup_rcver_yn = DECODE(cmp.DUP_SURVEY_SEQ, null, 'N', 'Y')
    		, tgt.DUP_REF_SURVEY_SEQ = cmp.DUP_SURVEY_SEQ
    ]]>
    </update>
    
    <select id="getSurveyTempTargetDuplicateCount" parameterType="Long" resultType="Map">
    	SELECT /*[survey/survey.sqlmap.xml].[getSurveyTempTargetDuplicateCount] */ 
    		dup.survey_state_cd AS state
    		, count(tgt.rcver_phone_num) AS count
		FROM survey_temp_trgter tgt
		INNER JOIN survey dup on dup.survey_seq = tgt.dup_ref_survey_seq
		WHERE tgt.survey_seq = #{surveySeq}
		GROUP BY dup.survey_state_cd
    </select>
    
    <select id="getSurveyTempTargetCount" parameterType="com.skt.mate.model.domain.survey.SurveyTrgterVO" resultType="Integer">
    	SELECT /*[survey/survey.sqlmap.xml].[getSurveyTempTargetDuplicateCount] */
    		COUNT(rcver_phone_num)
    	FROM survey_temp_trgter
    	<where>
    		survey_seq = #{surveySeq}
    		<if test="@MybatisUtils@isNotEmpty(dupRcverYn)">
    		AND dup_rcver_yn = #{dupRcverYn}
    		</if>
    		<if test="@MybatisUtils@isNotEmpty(rcvRjtYn)">
    		AND rcv_rjt_yn = #{rcvRjtYn}
    		</if>
    	</where>
    </select>

    <insert id="moveSurveyTarget" parameterType="com.skt.mate.model.domain.survey.SurveyVO" >
        MERGE INTO survey_trgter t
        USING (SELECT
                        survey_seq
                    ,   rcver_phone_num
                    ,   rcv_rjt_yn
                    ,   crt_user_id
                FROM
                        survey_temp_trgter
                WHERE
                        survey_seq = #{surveySeq}) s
        ON (t.survey_seq = s.survey_seq AND t.rcver_phone_num = s.rcver_phone_num)
        WHEN NOT MATCHED THEN INSERT
            (
                    survey_seq
                ,   rcver_phone_num
                ,   rcv_rjt_yn
                ,   crt_user_id
                ,   upd_user_id
            )
            VALUES
            (
                    s.survey_seq
                ,   s.rcver_phone_num
                ,   s.rcv_rjt_yn
                ,   s.crt_user_id
                ,   s.crt_user_id
            )
    </insert>

    <select id="selectSurveyResponseList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyResVO">
        SELECT *
        FROM SURVEY_RES
        WHERE SURVEY_SEQ=#{surveySeq}
    </select>

    <update id="updateLastQuestSeq" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE SURVEY
        SET LAST_QUST_SEQ=#{lastQustSeq}
        WHERE SURVEY_SEQ=#{surveySeq}
    </update>
    <update id="updateSurveyState" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE SURVEY
        SET SURVEY_STATE_CD=#{surveyStateCd}
        , SURVEY_STATE_UPD_DTTM=SYSDATE
        <if test="@MybatisUtils@isNotEmpty(bookingYn)">
            , BOOKING_YN=#{bookingYn}
        </if>
        <if test="@MybatisUtils@isNotEmpty(descr)">
            , DESCR=#{descr}
        </if>
        <if test="@MybatisUtils@isEmpty(descr)">
            , DESCR=null
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'APPR') and @MybatisUtils@isNotEmpty(apprUserId)">
            , APPR_USER_ID=#{apprUserId}
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'PRE_CHECK') and @MybatisUtils@isNotEmpty(apprUserId)">
            , APPR_USER_ID=#{apprUserId}
        </if>
        <if test="@MybatisUtils@equalsByString(surveyStateCd, 'MANUAL_END')">
            , SURVEY_END_DTTM = SYSDATE
        </if>
        WHERE SURVEY_SEQ=#{surveySeq}
    </update>

    <insert id="insertSurveyStateHistory" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        <selectKey resultType="Long" keyProperty="histId" order="BEFORE">
            SELECT
            SURVEY_STATE_UPD_HIST_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY_STATE_UPD_HIST(
        SURVEY_STATE_UPD_HIST_ID,
        SURVEY_SEQ,
        SURVEY_STATE_CD,
        <if test="@MybatisUtils@isNotEmpty(descr)">
            DESCR,
        </if>
        CRT_USER_ID
        )
        VALUES
        (
        #{histId},
        #{surveySeq},
        #{surveyStateCd},
        <if test="@MybatisUtils@isNotEmpty(descr)">
            #{descr},
        </if>
        #{crtUserId}
        )
    </insert>
    <delete id="deleteSurveyTempTarget" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        DELETE FROM SURVEY_TEMP_TRGTER
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <select id="selectSurveyResultList" parameterType="com.skt.mate.model.domain.survey.SurveyResultVO" resultType="com.skt.mate.model.domain.survey.SurveyResultVO">
        SELECT
        SURVEY_SEQ AS surveySeq,
        RCVER_PHONE_NUM AS rcverPhoneNum,
        ANS_CONT1 AS ansCont1,
        ANS_CONT2 AS ansCont2,
        ANS_CONT3 AS ansCont3,
        ANS_CONT4 AS ansCont4,
        ANS_CONT5 AS ansCont5,
        ANS_CONT6 AS ansCont6,
        ANS_CONT7 AS ansCont7,
        ANS_CONT8 AS ansCont8,
        ANS_CONT9 AS ansCont9,
        ANS_CONT10 AS ansCont10,
        ANS_CONT11 AS ansCont11,
        ANS_CONT12 AS ansCont12,
        ANS_CONT13 AS ansCont13,
        ANS_CONT14 AS ansCont14,
        ANS_CONT15 AS ansCont15,
        ANS_CONT16 AS ansCont16,
        ANS_CONT17 AS ansCont17,
        ANS_CONT18 AS ansCont18,
        ANS_CONT19 AS ansCont19,
        ANS_CONT20 AS ansCont20,
        CRT_RESULT_CD AS crtResultCd,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId
        FROM SURVEY_RESULT
        WHERE SURVEY_SEQ = #{surveySeq}
        <if test="@MybatisUtils@isNotEmpty(crtResultCd)">
            AND CRT_RESULT_CD = #{crtResultCd}
        </if>
        ORDER BY CRT_DTTM
    </select>
    <select id="selectTargetFilePath" resultType="String">
        SELECT
        RCVER_PHONE_NUM_FILE_URL,
        RCV_RJT_PHONE_NUM_FILE_URL
        FROM SURVEY
        WHERE SURVEY_SEQ=#{surveySeq}
    </select>
    <insert id="insertSurveyResult" parameterType="com.skt.mate.model.domain.survey.SurveyResultVO">
        INSERT INTO SURVEY_RESULT (
        SURVEY_SEQ,
        RCVER_PHONE_NUM,
        <if test="@MybatisUtils@isNotEmpty(fieldNameList)">
            <foreach collection="fieldNameList" item="val">
                ${val},
            </foreach>
        </if>
        CRT_RESULT_CD,
        CRT_USER_ID,
        CRT_DTTM
        )
        VALUES (
        #{surveySeq},
        #{rcverPhoneNum},
        <if test="@MybatisUtils@isNotEmpty(valueList)">
            <foreach collection="valueList" item="val">
                #{val},
            </foreach>
        </if>
        #{crtResultCd},
        #{crtUserId},
        SYSDATE
        )
    </insert>

    <select id="selectSurveyAnsingList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="String">
        SELECT                     /* [survey/survey.sqlmap.xml].[selectSurveyAnsingList]*/
        rcver_phone_num
        FROM
        survey_partcptn
        WHERE
        survey_seq = #{surveySeq}
        <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
            AND partcptn_state_cd = 'COMPL'
        </if>
    </select>

    <select id="selectSurveyAnsingTotalCount" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
        SELECT                     /* [survey/survey.sqlmap.xml].[selectSurveyAnsingTotalCount]*/
        COUNT(1)
        FROM
        survey_partcptn
        WHERE
        survey_seq = #{surveySeq}
        <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
            AND partcptn_state_cd = 'COMPL'
        </if>
    </select>

    <select id="selectSurveyAnsingPagingList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyResultVO">
        SELECT                     /* [survey/survey.sqlmap.xml].[selectSurveyAnsingPagingList]*/
        rcverPhoneNum
        ,   updDttm
        FROM
        (
        SELECT
        ROWNUM AS rnum
        ,   a.rcverPhoneNum AS rcverPhoneNum
        ,   a.updDttm AS updDttm
        FROM
        (
        SELECT
        rcver_phone_num AS rcverPhoneNum
        ,   upd_dttm AS updDttm
        FROM
        survey_partcptn
        WHERE
        survey_seq = #{surveySeq}
        <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
            AND partcptn_state_cd = 'COMPL'
        </if>
        ) a
        WHERE
        ROWNUM &lt; = #{maxRowNum}
        )
        WHERE
        rnum &gt; #{minRowNum}
    </select>

    <select id="selectSurveyResExtList" parameterType="com.skt.mate.model.domain.survey.SurveyResExtVO" resultType="com.skt.mate.model.domain.survey.SurveyResExtVO">
        SELECT                     /* [survey/survey.sqlmap.xml].[selectSurveyResExtList]*/
        sr.survey_seq AS surveySeq
        ,   sr.snd_phone_num AS sndPhoneNum
        ,   sr.qust_seq AS qustSeq
        ,   sq.qust_form_cd AS qustFormCd
        ,   sq.qust_ord_cl_cd AS qustOrdClCd
        ,   sq.qust_res_cl_cd AS qustResClCd
        ,   sr.ans_seq AS ansSeq
        ,   sa.ans_prt_ord AS ansPrtOrd
        ,   sa.ans_cont AS ansCont
        ,   sr.msg_cont AS msgCont
        FROM (
        SELECT * FROM (
        SELECT
        SURVEY_RES_SEQ
        , SURVEY_SEQ
        , SND_PHONE_NUM
        , QUST_SEQ
        , ANS_SEQ
        , RCV_MSG_SEQ
        , MSG_CONT
        , MAX(RCV_MSG_SEQ) OVER(PARTITION BY QUST_SEQ, SND_PHONE_NUM) AS MAX_SEQ
        FROM SURVEY_RES
        WHERE SURVEY_SEQ = #{surveySeq}
        AND SND_PHONE_NUM IN
        <if test="@MybatisUtils@isNotEmpty(sndPhoneNumList)">
            <foreach collection="sndPhoneNumList" item="val" separator="," open="(" close=")">
                #{val}
            </foreach>
        </if>
        <if test="@MybatisUtils@isEmpty(sndPhoneNumList)">
            (
            SELECT
            rcver_phone_num
            FROM
            survey_partcptn
            WHERE
            survey_seq = #{surveySeq}
            <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
                AND partcptn_state_cd = 'COMPL'
            </if>
            )
        </if>
        <if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
            AND NORMAL_ANS_YN = #{normalAnsYn}
        </if>
        ) WHERE RCV_MSG_SEQ = MAX_SEQ
        ) sr
        LEFT OUTER JOIN survey_ans sa ON sr.ans_seq = sa.ans_seq
        LEFT OUTER JOIN survey_qust sq ON sr.qust_seq = sq.qust_seq
        ORDER BY sr.snd_phone_num, sr.qust_seq, sr.survey_res_seq
    </select>

    <select id="selectSurveyResExtExcelCount" parameterType="com.skt.mate.model.domain.survey.SurveyResExtVO" resultType="Integer">
        SELECT /* [survey/survey.sqlmap.xml].[selectSurveyResExtExcelCount]*/
        COUNT(1)
        FROM (
        SELECT
        sr.snd_phone_num
        FROM survey_res sr
        INNER JOIN survey_partcptn sp ON sp.survey_seq = sr.survey_seq AND sr.snd_phone_num = sp.rcver_phone_num
        <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
            AND partcptn_state_cd = 'COMPL'
        </if>
        WHERE sr.survey_seq = #{surveySeq}
        <if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
            AND NORMAL_ANS_YN = #{normalAnsYn}
        </if>
        GROUP BY sr.snd_phone_num
        )
    </select>

    <select id="selectSurveyResExtExcelList" parameterType="com.skt.mate.model.domain.survey.SurveyResExtVO" resultType="com.skt.mate.model.domain.survey.SurveyResExtVO">
        SELECT  /* [survey/survey.sqlmap.xml].[selectSurveyResExtExcelList]*/
        survey_seq AS surveySeq
        , qust_seq AS qustSeq
        , snd_phone_num AS sndPhoneNum
        , qust_form_cd AS qustFormCd
        , qust_res_cl_cd AS qustResClCd
        , LISTAGG(ans_cont, ',') within group (order by ans_prt_ord) AS ansCont
        FROM (
        SELECT
        sr.survey_seq
        , sr.snd_phone_num
        , sr.qust_seq
        , sq.qust_form_cd
        , sq.qust_ord_cl_cd
        , sq.qust_res_cl_cd
        , sr.ans_seq
        , decode(sq.qust_form_cd, 'MLTPC', to_char(sa.ans_prt_ord), sr.msg_cont) as ans_cont
        , sa.ans_prt_ord
        FROM (
        SELECT * FROM (
        SELECT
        SURVEY_RES_SEQ
        , SURVEY_SEQ
        , SND_PHONE_NUM
        , QUST_SEQ
        , ANS_SEQ
        , RCV_MSG_SEQ
        , MSG_CONT
        , MAX(RCV_MSG_SEQ) OVER(PARTITION BY QUST_SEQ, SND_PHONE_NUM) AS MAX_SEQ
        FROM SURVEY_RES
        WHERE SURVEY_SEQ = #{surveySeq}
        <if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
            AND NORMAL_ANS_YN = #{normalAnsYn}
        </if>
        ) WHERE RCV_MSG_SEQ = MAX_SEQ
        ) sr
        INNER JOIN survey_partcptn sp ON sp.survey_seq = sr.survey_seq AND sr.snd_phone_num = sp.rcver_phone_num
        <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
            AND partcptn_state_cd = 'COMPL'
        </if>
        LEFT OUTER JOIN survey_ans sa ON sr.ans_seq = sa.ans_seq
        LEFT OUTER JOIN survey_qust sq ON sr.qust_seq = sq.qust_seq
        )
        GROUP BY survey_seq, qust_seq, snd_phone_num, qust_form_cd, qust_res_cl_cd
        ORDER BY snd_phone_num, qust_seq
    </select>

    <select id="selectSurveySpcNumList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT /*[survey.sqlmap.xml].[selectSurveySpcNumList] by jm*/
        TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD-HH24-MI') as surveyStartStr,
        TO_CHAR(SURVEY_END_DTTM + 12/24, 'YYYY-MM-DD-HH24-MI') as surveyEndStr,
        SURVEY_SPC_NUM
        FROM SURVEY
        WHERE CUSTOM_ID=#{customId}
        AND TEST_SURVEY_YN ='N'
        <if test="@MybatisUtils@isNotEmpty(surveySpcNum)">
            AND SURVEY_SPC_NUM=#{surveySpcNum}
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveySeq)">
            AND SURVEY_SEQ !=#{surveySeq}
        </if>
        AND SURVEY_END_DTTM >= SYSDATE
        AND SURVEY_STATE_CD IN ('RUNNING', 'REGISTER', 'APPR', 'PRE_CHECK', 'CHECKING')
        UNION ALL
        SELECT
        TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD-HH24-MI') as surveyStartStr,
        TO_CHAR(SURVEY_END_DTTM + 10/(24*60), 'YYYY-MM-DD-HH24-MI') as surveyEndStr,
        SURVEY_SPC_NUM
        FROM SURVEY
        WHERE CUSTOM_ID=#{customId}
        AND TEST_SURVEY_YN ='Y'
        <if test="@MybatisUtils@isNotEmpty(surveySpcNum)">
            AND SURVEY_SPC_NUM=#{surveySpcNum}
        </if>
        <if test="@MybatisUtils@isNotEmpty(surveySeq)">
            AND SURVEY_SEQ !=#{surveySeq}
        </if>
        AND SURVEY_END_DTTM >= SYSDATE
        AND SURVEY_STATE_CD IN ('RUNNING', 'REGISTER', 'APPR')
    </select>

    <!-- 설문 특번 삭제 전 체크 -->
    <select id="checkDeleteSurverySpcNumNum" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
    	SELECT 
    		COUNT(SURVEY_SEQ)
    	FROM SURVEY
    	WHERE SURVEY_SPC_NUM = #{surveySpcNum}
    	AND SURVEY_STATE_CD in ('REGISTER', 'APPR', 'PRE_CHECK', 'CHECKING', 'RUNNING')
    </select>

    <delete id="deleteSurveyPartcptn" parameterType="Long">
        DELETE FROM SURVEY_PARTCPTN
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <delete id="deleteSndMsg" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        DELETE FROM SND_MSG
        WHERE SURVEY_SEQ=#{surveySeq}
        AND SND_PHONE_NUM=#{surveySpcNum}
    </delete>
    
    <delete id="deleteSndAttFileBySurvey">
    	DELETE FROM SND_ATTFILE
    	WHERE MSG_SEQ IN (	SELECT MSG_SEQ FROM SND_MSG
        					WHERE SURVEY_SEQ=#{surveySeq}
        					AND SND_PHONE_NUM=#{surveySpcNum} )		
    </delete>

    <delete id="deleteRcvMsg" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        DELETE FROM RCV_MSG
        WHERE  RCV_DTTM > #{surveyStartDttm} AND #{surveyEndDttm} > RCV_DTTM
        AND RCV_PHONE_NUM=#{surveySpcNum}
    </delete>

    <delete id="deleteSurveyRes" parameterType="Long">
        DELETE FROM SURVEY_RES
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <delete id="deleteSurveyResult" parameterType="Long">
        DELETE FROM SURVEY_RESULT
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <delete id="deleteSurveyHist" parameterType="Long">
        DELETE FROM SURVEY_HIST
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>

    <select id="selectSurveySeq" parameterType="Integer" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT
	        SURVEY_SEQ as surveySeq,
	        SURVEY_START_DTTM AS surveyStartDttm,
	        SURVEY_END_DTTM AS surveyEndDttm,
	        SURVEY_SPC_NUM AS surveySpcNum,
	        RCVER_PHONE_NUM_FILE_URL AS rcverPhoneNumFileUrl,
	        RCV_RJT_PHONE_NUM_FILE_URL AS rcvRjtPhoneNumFileUrl,
	        SURVEY_AGRE_IMG_FILE_PATH AS surveyAgreImgFilePath, 
			SURVEY_COMPL_IMG_FILE_PATH AS surveyComplImgFilePath,
			CUSTOM_ID AS customId
		FROM SURVEY
        WHERE CUSTOM_ID=#{customId}
    </select>

    <insert id="insertTestSurvey" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        <selectKey resultType="Long" keyProperty="surveySeq" order="BEFORE">
            SELECT
            SURVEY_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO SURVEY(
        SURVEY_SEQ,
        SURVEY_TITLE,
        SURVEY_START_DTTM,
        SURVEY_END_DTTM,
        TGT_CND_USE_YN,
        TGT_CND_CONT,
        RCVER_PHONE_NUM_CNT,
        RCVER_PHONE_NUM_UL_DTTM,
        SURVEY_SPC_NUM,
        RCV_RJT_PHONE_NUM_CNT,
        SURVEY_AGRE_GUIDE_MSG,
        SURVEY_AGRE_IMG_FILE_PATH,
        SURVEY_AGRE_TITLE_MSG,
        SURVEY_COMPL_GUIDE_MSG,
        SURVEY_COMPL_IMG_FILE_PATH,
        SURVEY_COMPL_TITLE_MSG,
        SURVEY_END_NOTI_MSG,
        SURVEY_STATE_CD,
        ANS_ERR_NOTI_MSG,
        CRT_USER_ID,
        UPD_USER_ID,
        CUSTOM_ID,
        SURVEY_PROJECT_SEQ,
        TEST_SURVEY_YN,
        REF_SURVEY_SEQ,
        QUST_NUM_DISP_YN,
        TEST_SURVEY_CL_CD,
        AGRE_COUPON_CD_FILE_URL,
		AGRE_COUPON_FILE_ORGNL_NM,
		AGRE_COUPON_FILE_SIZE,
		AGRE_COUPON_ASSIGN_YN
        )
        SELECT
        #{surveySeq},
        #{surveyTitle},
        TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD HH24:MI:SS'),'YYYYMMDD HH24:MI:SS'),
        TO_DATE(TO_CHAR(SYSDATE+1/24, 'YYYYMMDD HH24:MI:SS'),'YYYYMMDD HH24:MI:SS'),
        NVL(#{tgtCndUseYn}, 'Y'),
        #{tgtCndCont},
        #{rcverPhoneNumCnt},
        TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD HH24:MI:SS'),'YYYYMMDD HH24:MI:SS'),
        SURVEY_SPC_NUM,
        ${rcvRjtPhoneNumCnt},
        SURVEY_AGRE_GUIDE_MSG,
        #{surveyAgreImgFilePath},
        SURVEY_AGRE_TITLE_MSG,
        SURVEY_COMPL_GUIDE_MSG,
        #{surveyComplImgFilePath},
        SURVEY_COMPL_TITLE_MSG,
        SURVEY_END_NOTI_MSG,
        #{surveyStateCd},
        ANS_ERR_NOTI_MSG,
        CRT_USER_ID,
        UPD_USER_ID,
        CUSTOM_ID,
        SURVEY_PROJECT_SEQ,
        #{testSurveyYn},
        #{orgSurveySeq},
        QUST_NUM_DISP_YN,
        #{testSurveyClCd},
        AGRE_COUPON_CD_FILE_URL,
		AGRE_COUPON_FILE_ORGNL_NM,
		AGRE_COUPON_FILE_SIZE,
		AGRE_COUPON_ASSIGN_YN
        FROM SURVEY
        WHERE SURVEY_SEQ = #{orgSurveySeq}
    </insert>
    <select id="selectSurveyAnswerList" parameterType="com.skt.mate.model.domain.survey.AnsVO" resultType="com.skt.mate.model.domain.survey.AnsVO">
        SELECT /*[survey/survey.sqlmap.xml].[selectSurveyAnswerList] */
        ANS_SEQ AS ansSeq,
        QUST_SEQ AS qustSeq,
        ANS_PRT_ORD AS ansPrtOrd,
        ANS_CONT AS ansCont,
        NEXT_QUST_SEQ AS nextQustSeq,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId,
        SURVEY_COMPL_GUIDE_MSG AS surveyComplGuideMsg,
        COUPON_TOT_RCV_YN AS couponTotRcvYn,
        NEXT_QUST_STEP_YN AS nextQustStepYn
        FROM SURVEY_ANS
        WHERE QUST_SEQ = #{qustSeq}
        ORDER BY ANS_PRT_ORD
    </select>
    <select id="selectOrgSurvey" parameterType="Long" resultType="com.skt.mate.model.domain.survey.SurveyVO">
        SELECT
        SURVEY_SEQ AS surveySeq,
        SURVEY_TITLE AS surveyTitle,
        SURVEY_START_DTTM AS surveyStartDttm,
        SURVEY_END_DTTM AS surveyEndDttm,
        SURVEY_START_DTTM AS surveyStartStr,
        SURVEY_END_DTTM AS surveyEndStr,
        TGT_CND_USE_YN AS tgtCndUseYn,
        TGT_CND_CONT AS tgtCndCont,
        LAST_QUST_SEQ AS lastQustSeq,
        SURVEY_SPC_NUM AS surveySpcNum,
        RCVER_PHONE_NUM_CNT AS rcverPhoneNumCnt,
        RCV_RJT_PHONE_NUM_CNT AS rcvRjtPhoneNumCnt,
        RCVER_PHONE_NUM_FILE_URL AS rcverPhoneNumFileUrl,
        RCVER_PHONE_NUM_UL_DTTM AS rcverPhoneNumUlDttm,
        RCV_RJT_PHONE_NUM_FILE_URL AS rcvRjtPhoneNumFileUrl,
        RCV_RJT_PHONE_NUM_UL_DTTM AS rcvRjtPhoneNumUlDttm,
        SURVEY_AGRE_GUIDE_MSG AS surveyAgreGuideMsg,
        SURVEY_AGRE_TITLE_MSG AS surveyAgreTitleMsg,
        SURVEY_AGRE_IMG_FILE_PATH AS surveyAgreImgFilePath,
        SURVEY_COMPL_GUIDE_MSG AS surveyComplGuideMsg,
        SURVEY_COMPL_TITLE_MSG AS surveyComplTitleMsg,
        SURVEY_COMPL_IMG_FILE_PATH AS surveyComplImgFilePath,
        SURVEY_END_NOTI_MSG AS surveyEndNotiMsg,
        SURVEY_STATE_CD AS surveyStateCd,
        ANS_ERR_NOTI_MSG AS ansErrNotiMsg,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId,
        CUSTOM_ID AS customId,
        SURVEY_PROJECT_SEQ AS surveyProjectSeq,
        AGRE_COUPON_CD_FILE_URL AS agreCouponCdFileUrl,
		AGRE_COUPON_FILE_ORGNL_NM AS agreCouponFileOrgnlNm,
		AGRE_COUPON_FILE_SIZE AS agreCouponFileSize,
		AGRE_COUPON_ASSIGN_YN AS agreCouponAssignYn
        FROM SURVEY
        WHERE SURVEY_SEQ = #{orgSurveySeq}
    </select>

    <update id="updateSurveyStateCd" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE SURVEY
        <set>
            UPD_DTTM = sysdate
            <if test="@MybatisUtils@isNotEmpty(surveyStateCd)">
                ,SURVEY_STATE_CD = #{surveyStateCd}
            </if>
        </set>
        <where>
            SURVEY_SEQ IN
            <foreach collection="surveyList" item="val" separator="," open="(" close=")">
                #{val.surveySeq}
            </foreach>
        </where>
    </update>

    <update id="updateSurveyDupTrgter" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        UPDATE/*[survey/survey.sqlmap.xml].[updateSurveyDupTrgter] */
        SURVEY_TRGTER SET DUP_RCVER_YN = 'Y'
        WHERE SURVEY_SEQ = #{surveySeq}
        AND RCVER_PHONE_NUM IN (
            SELECT
            DISTINCT(ST.RCVER_PHONE_NUM)
            FROM SURVEY_TRGTER ST
            INNER JOIN
                (
                SELECT
                    STR.SURVEY_SEQ
                    ,STR.RCVER_PHONE_NUM
                FROM SURVEY_TRGTER STR
                INNER JOIN SURVEY S
                ON S.SURVEY_SEQ = STR.SURVEY_SEQ
                AND STR.RCV_RJT_YN = 'N'
                AND STR.DUP_RCVER_YN = 'N'
                AND S.TEST_SURVEY_YN = 'N'
                AND S.SURVEY_STATE_CD in ('RUNNING','AUTO_END','MANUAL_END')
                AND TO_CHAR(S.SURVEY_END_DTTM+12/24, 'YYYY-MM-DD hh24:mi') >= TO_CHAR(SYSDATE , 'YYYY-MM-DD hh24:mi')
                UNION ALL
                SELECT
                    STR.SURVEY_SEQ
                    ,STR.RCVER_PHONE_NUM
                FROM SURVEY_TRGTER STR
                INNER JOIN SURVEY S
                ON S.SURVEY_SEQ = STR.SURVEY_SEQ
                AND STR.RCV_RJT_YN = 'N'
                AND STR.DUP_RCVER_YN = 'N'
                AND S.TEST_SURVEY_YN = 'Y'
                AND S.SURVEY_STATE_CD in ('RUNNING','AUTO_END','MANUAL_END')
                AND TO_CHAR(S.SURVEY_END_DTTM+10/(24*60), 'YYYY-MM-DD hh24:mi') >= TO_CHAR(SYSDATE , 'YYYY-MM-DD hh24:mi')
                INNER JOIN SURVEY_PARTCPTN SP
                ON STR.SURVEY_SEQ = SP.SURVEY_SEQ
                AND SP.PARTCPTN_STATE_CD NOT IN ('COMPL', 'SCR')
                AND SP.RCVER_PHONE_NUM = STR.RCVER_PHONE_NUM
                )A
            ON ST.RCVER_PHONE_NUM = A.RCVER_PHONE_NUM
            WHERE ST.SURVEY_SEQ = #{surveySeq}
            AND ST.RCV_RJT_YN = 'N'
            AND ST.SURVEY_SEQ != A.SURVEY_SEQ
        )
    </update>

    <select id="selectSurveyTrgter" parameterType="com.skt.mate.model.domain.survey.SurveyTrgterVO" resultType="com.skt.mate.model.domain.survey.SurveyTrgterVO">
        SELECT /*[survey/survey.sqlmap.xml].[selectSurveyTrgter] */
        SURVEY_SEQ AS surveySeq,
        RCVER_PHONE_NUM AS rcvRjtPhoneNum,
        RCV_RJT_YN AS rcvRjtYn,
        CRT_DTTM AS crtDttm,
        CRT_USER_ID AS crtUserId,
        UPD_DTTM AS updDttm,
        UPD_USER_ID AS updUserId
        FROM SURVEY_TRGTER
        WHERE SURVEY_SEQ = #{surveySeq}
        AND RCV_RJT_YN = #{rcvRjtYn}
        <if test="@MybatisUtils@isNotEmpty(dupRcverYn)">
            AND DUP_RCVER_YN = #{dupRcverYn}
        </if>
    </select>

    <!-- 고객특번뷰 조회 -->
    <select id="selectCustomSpcNumList" parameterType="com.skt.mate.model.domain.purchase.CustomSpcNumVO" resultType="com.skt.mate.model.domain.purchase.CustomSpcNumVO">
        SELECT /*[customer/customer.sqlmap.xml].[selectCustomSpcNumList] */
        a.user_id as userId
        , a.spc_num_num as spcNumNum
        , a.state_cd as stateCd
        , b.svc_cl as svcCl
        FROM custom_spc_num a
        , custom_spc_num_svc b
        <where>
            a.custom_spc_num_id = b.custom_spc_num_id
            AND a.state_cd = 'RUN'
            <if test="@MybatisUtils@isNotEmpty(userId)">
                AND user_id = #{userId}
            </if>
            <if test="@MybatisUtils@isNotEmpty(spcNumNum)">
                AND spc_num_num = #{spcNumNum}
            </if>
            <if test="@MybatisUtils@isNotEmpty(svcCl)">
                AND svc_cl = #{svcCl}
            </if>
        </where>
        ORDER BY svc_cl
    </select>

    <!-- 고객 상품 조회 -->
    <select id="selectCustomSvcList" parameterType="com.skt.mate.model.domain.purchase.CustomSpcNumVO" resultType="com.skt.mate.model.domain.purchase.CustomChargeBuyVO">
		SELECT /*[customer/customer.sqlmap.xml].[selectCustomSvcList] */
		a.SVC_CL as svcCl
		, a.TELECOM_CD as telecomCd
		, b.CHARGE_NM as chargeNm
		, b.CHARGE_ID as chargeId
		FROM CHARGE_SVC a, CHARGE b, CUSTOM_CHARGE_BUY C
		WHERE a.SVC_ID=b.SVC_ID
		AND b.CHARGE_ID=c.CHARGE_ID
		AND a.SVC_CL=#{svcCl}
		AND c.CUSTOM_ID=#{userId}
		AND c.USE_YN='Y'
	</select>

    <insert id="insertSurveyCoupon" parameterType="com.skt.mate.model.domain.survey.QustVO">
        INSERT INTO SURVEY_COUPON
        (
        SURVEY_COUPON_SEQ
        , QUST_SEQ
        , SURVEY_COUPON_CD
        , SURVEY_SEQ
        , COUPON_STATE_CD
        , CRT_DTTM
        , UPD_DTTM
        )
        SELECT
        SURVEY_COUPON_SEQ.NEXTVAL
        , #{qustSeq}
        , A.SURVEY_COUPON_CD
        , #{surveySeq}
        , 'NOISS'
        , SYSDATE
        , SYSDATE
        FROM
        (
        <foreach collection="couponCdList" item="item" separator="UNION ALL">
            SELECT
            #{item} AS SURVEY_COUPON_CD
            FROM DUAL
        </foreach>
        ) A
    </insert>
    
    <insert id="insertSurveyAssignedCoupon" parameterType="java.util.List">
        INSERT INTO SURVEY_COUPON
        (
        SURVEY_COUPON_SEQ
        , QUST_SEQ
        , SURVEY_COUPON_CD
        , SURVEY_SEQ
        , COUPON_STATE_CD
        , RCVER_PHONE_NUM
        , CRT_DTTM
        , UPD_DTTM
        )
        SELECT
        SURVEY_COUPON_SEQ.NEXTVAL
        , A.QUST_SEQ
        , A.SURVEY_COUPON_CD
        , A.SURVEY_SEQ
        , 'ISSUE'
        , A.RCVER_PHONE_NUM
        , SYSDATE
        , SYSDATE
        FROM
        (
        <foreach collection="list" item="item" separator="UNION ALL">
            SELECT
            #{item.qustSeq} AS QUST_SEQ,
            #{item.assignedCouponCd} AS SURVEY_COUPON_CD,
            #{item.surveySeq} AS SURVEY_SEQ,
            #{item.rcverPhoneNum} AS RCVER_PHONE_NUM
            FROM DUAL
        </foreach>
        ) A
    </insert>
    
    <insert id="insertTestSurveyCoupon" parameterType="com.skt.mate.model.domain.survey.QustVO">
    	INSERT /*[survey/survey.sqlmap.xml].[insertTestSurveyCoupon] */ 
    	INTO SURVEY_COUPON
    	(
    		SURVEY_COUPON_SEQ
        	, QUST_SEQ
        	, SURVEY_COUPON_CD
        	, SURVEY_SEQ
        	, COUPON_STATE_CD
        	, COUPON_IMG_URL
        	, RCVER_PHONE_NUM
        	, CRT_DTTM
        	, UPD_DTTM
    	)
    	SELECT
    		SURVEY_COUPON_SEQ.NEXTVAL
    		, #{qustSeq}
    		, SURVEY_COUPON_CD
    		, #{surveySeq}
    		, COUPON_STATE_CD
    		, COUPON_IMG_URL
        	, RCVER_PHONE_NUM
    		, SYSDATE
    		, SYSDATE
    	FROM SURVEY_COUPON
    	WHERE QUST_SEQ = #{refQustSeq}
    </insert>

    <select id="selectOldSurveyQust" parameterType="com.skt.mate.model.domain.survey.QustVO" resultType="com.skt.mate.model.domain.survey.QustVO">
        SELECT
            COUPON_CD_FILE_URL AS couponCdFileUrl
            , COUPON_FILE_ORGNL_NM AS couponFileOrgnlNm
            , COUPON_FILE_SIZE AS couponFileSize
            , COUPON_TP_CD AS couponTpCd
        FROM SURVEY_QUST
        WHERE QUST_SEQ = #{qustSeq}
    </select>

    <delete id="deleteOldSurveyCoupon" parameterType="com.skt.mate.model.domain.survey.SurveyVO">
        DELETE FROM SURVEY_COUPON
        WHERE SURVEY_SEQ = #{surveySeq}
        AND QUST_SEQ NOT IN (
            SELECT QUST_SEQ
            FROM SURVEY_QUST
            WHERE SURVEY_SEQ = #{surveySeq}
        )
    </delete>
    
    <delete id="deleteSurveyCoupon" parameterType="Long">
        DELETE FROM SURVEY_COUPON
        WHERE SURVEY_SEQ = #{surveySeq}
    </delete>
    
    <select id="selectSurveyTotalCount" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSurveyTotalCount]*/
		SELECT COUNT(1) FROM (
		     SELECT a.survey_seq
		        FROM survey_result a
		           , survey_partcptn b
		       WHERE 1=1
		         AND a.survey_seq = b.survey_seq
		         AND a.rcver_phone_num = b.rcver_phone_num
		         AND b.survey_seq = #{surveySeq}
		<if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
		         AND b.partcptn_state_cd = 'COMPL'
		</if>
		) t1
    </select>

	<select id="selectSurveyPagingList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyResultVO">
		/* [survey/survey.sqlmap.xml].[selectSurveyPagingList]*/
		SELECT t1.*
		   FROM (
		     SELECT a1.*, ROWNUM AS rnum
		        FROM (
		          SELECT a.survey_seq		AS surveySeq
		               , a.ans_cont1		AS ansCont1
		               , a.ans_cont2		AS ansCont2
		               , a.ans_cont3		AS ansCont3
		               , a.ans_cont4		AS ansCont4
		               , a.ans_cont5		AS ansCont5
		               , a.ans_cont6		AS ansCont6
		               , a.ans_cont7		AS ansCont7
		               , a.ans_cont8		AS ansCont8
		               , a.ans_cont9		AS ansCont9
		               , a.ans_cont10		AS ansCont10
		               , a.ans_cont11		AS ansCont11
		               , a.ans_cont12		AS ansCont12
		               , a.ans_cont13		AS ansCont13
		               , a.ans_cont14		AS ansCont14
		               , a.ans_cont15		AS ansCont15
		               , a.ans_cont16		AS ansCont16
		               , a.ans_cont17		AS ansCont17
		               , a.ans_cont18		AS ansCont18
		               , a.ans_cont19		AS ansCont19
		               , a.ans_cont20		AS ansCont20
		               , a.crt_result_cd	AS crtResultCd
		               , a.crt_dttm			AS crtDttm
		               , a.crt_user_id		AS crtUserId
		               , b.rcver_phone_num	AS rcverPhoneNum
		               , b.upd_dttm			AS updDttm
		             FROM survey_result a
		                , survey_partcptn b
		            WHERE 1=1
		              AND a.survey_seq = b.survey_seq
		              AND a.rcver_phone_num = b.rcver_phone_num
		              AND b.survey_seq = #{surveySeq}
		<if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
		              AND b.partcptn_state_cd = 'COMPL'
		              ORDER BY b.upd_dttm DESC
		</if>
		     ) a1 WHERE ROWNUM &lt; = #{maxRowNum}
		) t1 WHERE rnum &gt; #{minRowNum}
    </select>
    
    <select id="selectSurveyListById" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyResultVO">
		/* [survey/survey.sqlmap.xml].[selectSurveyListById]*/
		SELECT
    		survey_seq AS surveySeq
		    , rcver_phone_num AS rcverPhoneNum
		    , MAX(ans_cont1) AS ansCont1
		    , MAX(ans_cont2) AS ansCont2
		    , MAX(ans_cont3) AS ansCont3
		    , MAX(ans_cont4) AS ansCont4
		    , MAX(ans_cont5) AS ansCont5
		    , MAX(ans_cont6) AS ansCont6
		    , MAX(ans_cont7) AS ansCont7
		    , MAX(ans_cont8) AS ansCont8
		    , MAX(ans_cont9) AS ansCont9
		    , MAX(ans_cont10) AS ansCont10
		    , MAX(ans_cont11) AS ansCont11
		    , MAX(ans_cont12) AS ansCont12
		    , MAX(ans_cont13) AS ansCont13
		    , MAX(ans_cont14) AS ansCont14
		    , MAX(ans_cont15) AS ansCont15
		    , MAX(ans_cont16) AS ansCont16
		    , MAX(ans_cont17) AS ansCont17
		    , MAX(ans_cont18) AS ansCont18
		    , MAX(ans_cont19) AS ansCont19
		    , MAX(ans_cont20) AS ansCont20
			, MAX(upd_dttm) AS updDttm
		    , MAX(coupon_rcv_cnt) AS couponRcvCnt
		    , MAX(rcv_coupon_qust_seq1) AS rcvCouponQustSeq1
			, MAX(rcv_coupon_seq1) AS rcvCouponSeq1
			, MAX(rcv_coupon_cd1) AS rcvCouponCd1
			, MAX(rcv_coupon_qust_seq2) AS rcvCouponQustSeq2
			, MAX(rcv_coupon_seq2) AS rcvCouponSeq2
			, MAX(rcv_coupon_cd2) AS rcvCouponCd2
			, MAX(rcv_coupon_qust_seq3) AS rcvCouponQustSeq3
			, MAX(rcv_coupon_seq3) AS rcvCouponSeq3
			, MAX(rcv_coupon_cd3) AS rcvCouponCd3
			, MAX(rcv_coupon_qust_seq4) AS rcvCouponQustSeq4
			, MAX(rcv_coupon_seq4) AS rcvCouponSeq4
			, MAX(rcv_coupon_cd4) AS rcvCouponCd4
			, MAX(rcv_coupon_qust_seq5) AS rcvCouponQustSeq5
			, MAX(rcv_coupon_seq5) AS rcvCouponSeq5
			, MAX(rcv_coupon_cd5) AS rcvCouponCd5
			, MAX(rcv_coupon_qust_seq6) AS rcvCouponQustSeq6
			, MAX(rcv_coupon_seq6) AS rcvCouponSeq6
			, MAX(rcv_coupon_cd6) AS rcvCouponCd6
			, MAX(rcv_coupon_qust_seq7) AS rcvCouponQustSeq7
			, MAX(rcv_coupon_seq7) AS rcvCouponSeq7
			, MAX(rcv_coupon_cd7) AS rcvCouponCd7
			, MAX(rcv_coupon_qust_seq8) AS rcvCouponQustSeq8
			, MAX(rcv_coupon_seq8) AS rcvCouponSeq8
			, MAX(rcv_coupon_cd8) AS rcvCouponCd8
			, MAX(rcv_coupon_qust_seq9) AS rcvCouponQustSeq9
			, MAX(rcv_coupon_seq9) AS rcvCouponSeq9
			, MAX(rcv_coupon_cd9) AS rcvCouponCd9
			, MAX(rcv_coupon_qust_seq10) AS rcvCouponQustSeq10
			, MAX(rcv_coupon_seq10) AS rcvCouponSeq10
			, MAX(rcv_coupon_cd10) AS rcvCouponCd10
			, MAX(rcv_agre_coupon_seq) AS rcvAgreCouponSeq
			, MAX(rcv_agre_coupon_cd) AS rcvAgreCouponCd
		FROM (
		    SELECT 
		        a.survey_seq
		        , c.rcver_phone_num
		        , a.ans_cont1	
		        , a.ans_cont2	
		        , a.ans_cont3	
		        , a.ans_cont4	
		        , a.ans_cont5	
		        , a.ans_cont6	
		        , a.ans_cont7	
		        , a.ans_cont8	
		        , a.ans_cont9	
		        , a.ans_cont10	
		        , a.ans_cont11	
		        , a.ans_cont12	
		        , a.ans_cont13	
		        , a.ans_cont14	
		        , a.ans_cont15	
		        , a.ans_cont16	
		        , a.ans_cont17	
		        , a.ans_cont18	
		        , a.ans_cont19	
		        , a.ans_cont20
		        , c.upd_dttm
		        , 0 AS coupon_rcv_cnt
		        , 0    AS rcv_coupon_qust_seq1
		        , 0    AS rcv_coupon_seq1
		        , ''   AS rcv_coupon_cd1
		        , 0    AS rcv_coupon_qust_seq2
		        , 0    AS rcv_coupon_seq2
		        , ''   AS rcv_coupon_cd2
		        , 0    AS rcv_coupon_qust_seq3
		        , 0    AS rcv_coupon_seq3
		        , ''   AS rcv_coupon_cd3
		        , 0    AS rcv_coupon_qust_seq4
		        , 0    AS rcv_coupon_seq4
		        , ''   AS rcv_coupon_cd4
		        , 0    AS rcv_coupon_qust_seq5
		        , 0    AS rcv_coupon_seq5
		        , ''   AS rcv_coupon_cd5
		        , 0    AS rcv_coupon_qust_seq6
		        , 0    AS rcv_coupon_seq6
		        , ''   AS rcv_coupon_cd6
		        , 0    AS rcv_coupon_qust_seq7
		        , 0    AS rcv_coupon_seq7
		        , ''   AS rcv_coupon_cd7
		        , 0    AS rcv_coupon_qust_seq8
		        , 0    AS rcv_coupon_seq8
		        , ''   AS rcv_coupon_cd8
		        , 0    AS rcv_coupon_qust_seq9
		        , 0    AS rcv_coupon_seq9
		        , ''   AS rcv_coupon_cd9
		        , 0    AS rcv_coupon_qust_seq10
		        , 0    AS rcv_coupon_seq10
		        , ''   AS rcv_coupon_cd10
		        , 0    AS rcv_agre_coupon_seq
                , ''   AS rcv_agre_coupon_cd
		    FROM survey_result a
		    inner join survey_partcptn c 
		    ON a.survey_seq = c.survey_seq 
		    AND a.rcver_phone_num = c.rcver_phone_num 
		    AND c.survey_seq = #{surveySeq}
		<if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
			AND (c.partcptn_state_cd = 'COMPL' OR c.partcptn_state_cd = 'SCR')
		</if>
		    UNION ALL
		    SELECT 
		        b.survey_seq
		        , b.rcver_phone_num
		        , '' AS ans_cont1	
		        , '' AS ans_cont2	
		        , '' AS ans_cont3	
		        , '' AS ans_cont4	
		        , '' AS ans_cont5	
		        , '' AS ans_cont6	
		        , '' AS ans_cont7	
		        , '' AS ans_cont8	
		        , '' AS ans_cont9	
		        , '' AS ans_cont10	
		        , '' AS ans_cont11	
		        , '' AS ans_cont12	
		        , '' AS ans_cont13	
		        , '' AS ans_cont14	
		        , '' AS ans_cont15	
		        , '' AS ans_cont16	
		        , '' AS ans_cont17	
		        , '' AS ans_cont18	
		        , '' AS ans_cont19	
		        , '' AS ans_cont20	
				, NULL AS upd_dttm
		        , DECODE(rcv_coupon_qust_seq1, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq2, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq3, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq4, NULL, 0, 1) 
		          		+ DECODE(rcv_coupon_qust_seq5, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq6, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq7, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq8, NULL, 0, 1) 
		          		+ DECODE(rcv_coupon_qust_seq9, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq10, NULL, 0, 1)  AS couponRcvCnt
		        , b.rcv_coupon_qust_seq1
		        , b.rcv_coupon_seq1
		        , b1.survey_coupon_cd
		        , b.rcv_coupon_qust_seq2
		        , b.rcv_coupon_seq2
		        , b2.survey_coupon_cd
		        , b.rcv_coupon_qust_seq3
		        , b.rcv_coupon_seq3
		        , b3.survey_coupon_cd
		        , b.rcv_coupon_qust_seq4
		        , b.rcv_coupon_seq4
		        , b4.survey_coupon_cd
		        , b.rcv_coupon_qust_seq5
		        , b.rcv_coupon_seq5
		        , b5.survey_coupon_cd
		        , b.rcv_coupon_qust_seq6
		        , b.rcv_coupon_seq6
		        , b6.survey_coupon_cd
		        , b.rcv_coupon_qust_seq7
		        , b.rcv_coupon_seq7
		        , b7.survey_coupon_cd
		        , b.rcv_coupon_qust_seq8
		        , b.rcv_coupon_seq8
		        , b8.survey_coupon_cd
		        , b.rcv_coupon_qust_seq9
		        , b.rcv_coupon_seq9
		        , b9.survey_coupon_cd
		        , b.rcv_coupon_qust_seq10
		        , b.rcv_coupon_seq10
		        , b10.survey_coupon_cd
		        , b.rcv_agre_coupon_seq
		        , b11.survey_agre_coupon_cd 
		    from survey_coupon_result b
		    LEFT OUTER JOIN survey_coupon b1 ON b.rcv_coupon_seq1 = b1.survey_coupon_seq AND b.rcver_phone_num = b1.rcver_phone_num AND b1.coupon_state_cd IN ('ISSUE', 'REISS')
			LEFT OUTER JOIN survey_coupon b2 ON b.rcv_coupon_seq2 = b2.survey_coupon_seq AND b.rcver_phone_num = b2.rcver_phone_num AND b2.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b3 ON b.rcv_coupon_seq3 = b3.survey_coupon_seq AND b.rcver_phone_num = b3.rcver_phone_num AND b3.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b4 ON b.rcv_coupon_seq4 = b4.survey_coupon_seq AND b.rcver_phone_num = b4.rcver_phone_num AND b4.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b5 ON b.rcv_coupon_seq5 = b5.survey_coupon_seq AND b.rcver_phone_num = b5.rcver_phone_num AND b5.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b6 ON b.rcv_coupon_seq6 = b6.survey_coupon_seq AND b.rcver_phone_num = b6.rcver_phone_num AND b6.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b7 ON b.rcv_coupon_seq7 = b7.survey_coupon_seq AND b.rcver_phone_num = b7.rcver_phone_num AND b7.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b8 ON b.rcv_coupon_seq8 = b8.survey_coupon_seq AND b.rcver_phone_num = b8.rcver_phone_num AND b8.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b9 ON b.rcv_coupon_seq9 = b9.survey_coupon_seq AND b.rcver_phone_num = b9.rcver_phone_num AND b9.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_coupon b10 ON b.rcv_coupon_seq10 = b10.survey_coupon_seq AND b.rcver_phone_num = b10.rcver_phone_num AND b10.coupon_state_cd IN ('ISSUE', 'REISS')
		    LEFT OUTER JOIN survey_agre_coupon b11 on b.rcv_agre_coupon_seq = b11.survey_agre_coupon_seq and b.rcver_phone_num = b11.rcver_phone_num and b11.coupon_state_cd IN ('ISSUE', 'REISS')
		    WHERE b.survey_seq = #{surveySeq}
		) GROUP BY survey_seq, rcver_phone_num
		ORDER BY MAX(upd_dttm) DESC
    </select>
    
    <select id="selectSurveyCouponTotalCount" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSurveyCouponTotalCount]*/
		SELECT COUNT(1) FROM (
		     SELECT a.survey_seq
		        FROM survey_coupon_result a
		             inner join survey_partcptn b
		             ON a.survey_seq = b.survey_seq
		             AND a.rcver_phone_num = b.rcver_phone_num
		             AND b.partcptn_state_cd = 'COMPL'
		             AND a.survey_seq = #{surveySeq}
		<if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
		             AND b.partcptn_state_cd = 'COMPL'
		</if>
		             left outer join survey_coupon b1 on a.rcv_coupon_seq1 = b1.survey_coupon_seq and a.rcver_phone_num = b1.rcver_phone_num and b1.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b2 on a.rcv_coupon_seq2 = b2.survey_coupon_seq and a.rcver_phone_num = b2.rcver_phone_num and b2.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b3 on a.rcv_coupon_seq3 = b3.survey_coupon_seq and a.rcver_phone_num = b3.rcver_phone_num and b3.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b4 on a.rcv_coupon_seq4 = b4.survey_coupon_seq and a.rcver_phone_num = b4.rcver_phone_num and b4.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b5 on a.rcv_coupon_seq5 = b5.survey_coupon_seq and a.rcver_phone_num = b5.rcver_phone_num and b5.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b6 on a.rcv_coupon_seq6 = b6.survey_coupon_seq and a.rcver_phone_num = b6.rcver_phone_num and b6.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b7 on a.rcv_coupon_seq7 = b7.survey_coupon_seq and a.rcver_phone_num = b7.rcver_phone_num and b7.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b8 on a.rcv_coupon_seq8 = b8.survey_coupon_seq and a.rcver_phone_num = b8.rcver_phone_num and b8.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b9 on a.rcv_coupon_seq9 = b9.survey_coupon_seq and a.rcver_phone_num = b9.rcver_phone_num and b9.coupon_state_cd = 'ISSUE'
		             left outer join survey_coupon b10 on a.rcv_coupon_seq10 = b10.survey_coupon_seq and a.rcver_phone_num = b10.rcver_phone_num and b10.coupon_state_cd = 'ISSUE'
		             left outer join survey_agre_coupon b11 on a.rcv_agre_coupon_seq = b11.survey_agre_coupon_seq and a.rcver_phone_num = b11.rcver_phone_num and b11.coupon_state_cd = 'ISSUE'
		) t1
    </select>

	<select id="selectSurveyCouponPagingList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyCouponResultVO">
		/* [survey/survey.sqlmap.xml].[selectSurveyCouponPagingList]*/
		SELECT t1.*
		   FROM (
		     SELECT a1.*, ROWNUM AS rnum
		        FROM (
		          SELECT DECODE(rcv_coupon_qust_seq1, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq2, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq3, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq4, NULL, 0, 1) 
		          		+ DECODE(rcv_coupon_qust_seq5, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq6, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq7, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq8, NULL, 0, 1) 
		          		+ DECODE(rcv_coupon_qust_seq9, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq10, NULL, 0, 1)  AS couponRcvCnt
		               , a.survey_seq				AS surveySeq
		               , a.rcver_phone_num			AS rcverPhoneNum
		               , a.rcv_coupon_qust_seq1		AS rcvCouponQustSeq1
		               , a.rcv_coupon_seq1			AS rcvCouponSeq1
		               , b1.survey_coupon_cd		AS rcvCouponCd1
		               , a.rcv_coupon_qust_seq2		AS rcvCouponQustSeq2
		               , a.rcv_coupon_seq2			AS rcvCouponSeq2
		               , b2.survey_coupon_cd		AS rcvCouponCd2
		               , a.rcv_coupon_qust_seq3		AS rcvCouponQustSeq3
		               , a.rcv_coupon_seq3			AS rcvCouponSeq3
		               , b3.survey_coupon_cd		AS rcvCouponCd3
		               , a.rcv_coupon_qust_seq4		AS rcvCouponQustSeq4
		               , a.rcv_coupon_seq4			AS rcvCouponSeq4
		               , b4.survey_coupon_cd		AS rcvCouponCd4
		               , a.rcv_coupon_qust_seq5		AS rcvCouponQustSeq5
		               , a.rcv_coupon_seq5			AS rcvCouponSeq5
		               , b5.survey_coupon_cd		AS rcvCouponCd5
		               , a.rcv_coupon_qust_seq6		AS rcvCouponQustSeq6
		               , a.rcv_coupon_seq6			AS rcvCouponSeq6
		               , b6.survey_coupon_cd		AS rcvCouponCd6
		               , a.rcv_coupon_qust_seq7		AS rcvCouponQustSeq7
		               , a.rcv_coupon_seq7			AS rcvCouponSeq7
		               , b7.survey_coupon_cd		AS rcvCouponCd7
		               , a.rcv_coupon_qust_seq8		AS rcvCouponQustSeq8
		               , a.rcv_coupon_seq8			AS rcvCouponSeq8
		               , b8.survey_coupon_cd		AS rcvCouponCd8
		               , a.rcv_coupon_qust_seq9		AS rcvCouponQustSeq9
		               , a.rcv_coupon_seq9			AS rcvCouponSeq9
		               , b9.survey_coupon_cd		AS rcvCouponCd9
		               , a.rcv_coupon_qust_seq10	AS rcvCouponQustSeq10
		               , a.rcv_coupon_seq10			AS rcvCouponSeq10
		               , b10.survey_coupon_cd		AS rcvCouponCd10
		               , a.crt_dttm					AS crtDttm
		               , a.upd_dttm					AS updDttm
		               , a.rcv_agre_coupon_seq		AS rcvAgreCouponSeq
		               , b11.survey_agre_coupon_cd	AS rcvAgreCouponCd
		             FROM survey_coupon_result a
		                  inner join survey_partcptn b
		                  ON a.survey_seq = b.survey_seq
		                  AND a.rcver_phone_num = b.rcver_phone_num
		                  AND b.partcptn_state_cd = 'COMPL'
		                  AND a.survey_seq = #{surveySeq}
		<if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
		                  AND b.partcptn_state_cd = 'COMPL'
		</if>
		                  left outer join survey_coupon b1 on a.rcv_coupon_seq1 = b1.survey_coupon_seq and a.rcver_phone_num = b1.rcver_phone_num and b1.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b2 on a.rcv_coupon_seq2 = b2.survey_coupon_seq and a.rcver_phone_num = b2.rcver_phone_num and b2.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b3 on a.rcv_coupon_seq3 = b3.survey_coupon_seq and a.rcver_phone_num = b3.rcver_phone_num and b3.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b4 on a.rcv_coupon_seq4 = b4.survey_coupon_seq and a.rcver_phone_num = b4.rcver_phone_num and b4.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b5 on a.rcv_coupon_seq5 = b5.survey_coupon_seq and a.rcver_phone_num = b5.rcver_phone_num and b5.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b6 on a.rcv_coupon_seq6 = b6.survey_coupon_seq and a.rcver_phone_num = b6.rcver_phone_num and b6.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b7 on a.rcv_coupon_seq7 = b7.survey_coupon_seq and a.rcver_phone_num = b7.rcver_phone_num and b7.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b8 on a.rcv_coupon_seq8 = b8.survey_coupon_seq and a.rcver_phone_num = b8.rcver_phone_num and b8.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b9 on a.rcv_coupon_seq9 = b9.survey_coupon_seq and a.rcver_phone_num = b9.rcver_phone_num and b9.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_coupon b10 on a.rcv_coupon_seq10 = b10.survey_coupon_seq and a.rcver_phone_num = b10.rcver_phone_num and b10.coupon_state_cd IN ('ISSUE', 'REISS')
		                  left outer join survey_agre_coupon b11 on a.rcv_agre_coupon_seq = b11.survey_agre_coupon_seq and a.rcver_phone_num = b11.rcver_phone_num and b11.coupon_state_cd IN ('ISSUE', 'REISS')
					order by b.upd_dttm desc
		     ) a1 WHERE ROWNUM &lt; = #{maxRowNum}
		) t1 WHERE rnum &gt; #{minRowNum}
    </select>
    
	<select id="selectSurveyCouponCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSurveyCouponCount]*/
		SELECT COUNT(1) FROM survey_qust WHERE survey_seq = #{surveySeq} AND qust_form_cd = 'COUPON'
    </select>
    
    <select id="selectSendTargetCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSendTargetCount]*/
		SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_TRGTER WHERE survey_seq = #{surveySeq}
	</select>
	
	<select id="selectDuplicatedDropCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectDuplicatedDropCount]*/
		SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_TRGTER WHERE survey_seq = #{surveySeq} AND dup_rcver_yn = 'Y'
	</select>
	
	<select id="selectTrySendTargetCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectTrySendTargetCount]*/
		SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_TRGTER WHERE survey_seq = #{surveySeq} AND dup_rcver_yn = 'N' and rcv_rjt_yn = 'N'
	</select>
	
	<select id="selectReceivedIntroMessageCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectReceivedIntroMessageCount]*/
		SELECT COUNT(rcver_phone_num) FROM survey_partcptn WHERE survey_seq = #{surveySeq}
	</select>
	
	<select id="selectErrorCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectErrorCount]*/
		SELECT COUNT(h.mt_id)
		FROM mt_snd_hist h
		INNER JOIN 
		(   SELECT s.custom_id , s.survey_start_dttm, s.survey_end_dttm, s.survey_spc_num, t.rcver_phone_num
    		FROM survey s
    		INNER JOIN survey_trgter t ON s.survey_seq = t.survey_seq
    		WHERE s.survey_seq = #{surveySeq}
    		AND t.dup_rcver_yn = 'N' and t.rcv_rjt_yn = 'N'
		) s ON s.custom_id = h.user_id 
		AND h.req_rcv_dttm BETWEEN s.survey_start_dttm and s.survey_end_dttm
		AND h.snd_mdn = s.survey_spc_num           
		AND h.rcv_mdn = s.rcver_phone_num
		WHERE h.snd_state = 'FAIL'
	</select>
	
	<select id="selectReceivedFirstQuestionCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectReceivedFirstQuestionCount]*/
		SELECT COUNT(distinct sp.rcver_phone_num)
		FROM survey_partcptn sp
		INNER JOIN survey_res sr ON sr.survey_seq = sp.survey_seq AND sr.msg_tp_cd = 'QUST' AND sr.rcver_phone_num = sp.rcver_phone_num		
		WHERE sp.survey_seq = #{surveySeq}
		AND sp.partcptn_state_cd != 'AGREED'
	</select>
	
	<select id="selectSendMoCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSendMoCount]*/
		SELECT COUNT(distinct sp.rcver_phone_num)
		   FROM survey_partcptn sp
			INNER JOIN survey_res sr ON sr.survey_seq = sp.survey_seq AND sr.msg_tp_cd = 'ANS' AND sr.snd_phone_num = sp.rcver_phone_num AND sr.msg_cont is not null
		  WHERE sp.survey_seq = #{surveySeq}
	</select>
	
	<select id="selectSendEffectiveMoCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSendEffectiveMoCount]*/
		SELECT COUNT(distinct sp.rcver_phone_num)
		   FROM survey_partcptn sp
			INNER JOIN survey_res sr ON sr.survey_seq = sp.survey_seq AND sr.msg_tp_cd = 'ANS' AND sr.snd_phone_num = sp.rcver_phone_num AND sr.normal_ans_yn = 'Y'
		  WHERE sp.survey_seq = #{surveySeq}
	</select>
	
	<select id="selectScreenOutCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectScreenOutCount]*/
		SELECT COUNT(sp.rcver_phone_num)
		FROM survey_partcptn sp
		WHERE sp.survey_seq = #{surveySeq} AND sp.partcptn_state_cd = 'SCR'
	</select>
	
	<select id="selectReceivedRewardCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectReceivedRewardCount]*/
		SELECT COUNT(rcver_phone_num) FROM survey_coupon_result WHERE survey_seq = #{surveySeq}
	</select>
	
	<select id="selectSurveyCompletedCount" parameterType="Long" resultType="Integer">
		/* [survey/survey.sqlmap.xml].[selectSurveyCompletedCount]*/
		SELECT COUNT(sp.rcver_phone_num)
		FROM survey_partcptn sp
		WHERE sp.survey_seq = #{surveySeq} AND sp.partcptn_state_cd = 'COMPL'
	</select>
	
	<select id="selectSendRewardTermInfo" parameterType="Long" resultType="String">
		/* [survey/survey.sqlmap.xml].[selectSendRewardTermInfo]*/
		SELECT '최소 2초 / 최대 11초 / 평균 4.1초' FROM dual
	</select>
	
	<select id="selectSurveyAndCouponResultList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyResultVO">
		/* [survey/survey.sqlmap.xml].[selectSurveyAndCouponResultList]*/
		SELECT 
		    survey_seq AS surveySeq
		    , rcver_phone_num AS rcverPhoneNum
		    , MAX(ans_cont) AS ansCont
		    , MAX(qust_seq) AS qustSeq
		    , MAX(coupon_rcv_cnt) AS couponRcvCnt
		    , MAX(rcv_coupon_qust_seq1) AS rcvCouponQustSeq1
		    , MAX(rcv_coupon_seq1) AS rcvCouponSeq1
		    , MAX(rcv_coupon_cd1) AS rcvCouponCd1
		    , MAX(rcv_coupon_qust_seq2) AS rcvCouponQustSeq2
		    , MAX(rcv_coupon_seq2) AS rcvCouponSeq2
		    , MAX(rcv_coupon_cd2) AS rcvCouponCd2
		    , MAX(rcv_coupon_qust_seq3) AS rcvCouponQustSeq3
		    , MAX(rcv_coupon_seq3) AS rcvCouponSeq3
		    , MAX(rcv_coupon_cd3) AS rcvCouponCd3
		    , MAX(rcv_coupon_qust_seq4) AS rcvCouponQustSeq4
		    , MAX(rcv_coupon_seq4) AS rcvCouponSeq4
		    , MAX(rcv_coupon_cd4) AS rcvCouponCd4
		    , MAX(rcv_coupon_qust_seq5) AS rcvCouponQustSeq5
		    , MAX(rcv_coupon_seq5) AS rcvCouponSeq5
		    , MAX(rcv_coupon_cd5) AS rcvCouponCd5
		    , MAX(rcv_coupon_qust_seq6) AS rcvCouponQustSeq6
		    , MAX(rcv_coupon_seq6) AS rcvCouponSeq6
		    , MAX(rcv_coupon_cd6) AS rcvCouponCd6
		    , MAX(rcv_coupon_qust_seq7) AS rcvCouponQustSeq7
		    , MAX(rcv_coupon_seq7) AS rcvCouponSeq7
		    , MAX(rcv_coupon_cd7) AS rcvCouponCd7
		    , MAX(rcv_coupon_qust_seq8) AS rcvCouponQustSeq8
		    , MAX(rcv_coupon_seq8) AS rcvCouponSeq8
		    , MAX(rcv_coupon_cd8) AS rcvCouponCd8
		    , MAX(rcv_coupon_qust_seq9) AS rcvCouponQustSeq9
		    , MAX(rcv_coupon_seq9) AS rcvCouponSeq9
		    , MAX(rcv_coupon_cd9) AS rcvCouponCd9
		    , MAX(rcv_coupon_qust_seq10) AS rcvCouponQustSeq10
		    , MAX(rcv_coupon_seq10) AS rcvCouponSeq10
		    , MAX(rcv_coupon_cd10) AS rcvCouponCd10
		    , MAX(upd_dttm) AS updDttm
		    , MAX(rcv_agre_coupon_seq) AS rcvAgreCouponSeq
		    , MAX(rcv_agre_coupon_cd) AS rcvAgreCouponCd
		FROM (
                SELECT survey_seq
                    , rcver_phone_num
                    , LISTAGG(ans_cont, '___') WITHIN GROUP(ORDER BY qust_seq) AS ans_cont
                    , LISTAGG(qust_seq, ',') WITHIN GROUP(ORDER BY qust_seq) AS qust_seq                    
                    , 0 AS coupon_rcv_cnt
                    , 0    AS rcv_coupon_qust_seq1
                    , 0    AS rcv_coupon_seq1
                    , ''   AS rcv_coupon_cd1
                    , 0    AS rcv_coupon_qust_seq2
                    , 0    AS rcv_coupon_seq2
                    , ''   AS rcv_coupon_cd2
                    , 0    AS rcv_coupon_qust_seq3
                    , 0    AS rcv_coupon_seq3
                    , ''   AS rcv_coupon_cd3
                    , 0    AS rcv_coupon_qust_seq4
                    , 0    AS rcv_coupon_seq4
                    , ''   AS rcv_coupon_cd4
                    , 0    AS rcv_coupon_qust_seq5
                    , 0    AS rcv_coupon_seq5
                    , ''   AS rcv_coupon_cd5
                    , 0    AS rcv_coupon_qust_seq6
                    , 0    AS rcv_coupon_seq6
                    , ''   AS rcv_coupon_cd6
                    , 0    AS rcv_coupon_qust_seq7
                    , 0    AS rcv_coupon_seq7
                    , ''   AS rcv_coupon_cd7
                    , 0    AS rcv_coupon_qust_seq8
                    , 0    AS rcv_coupon_seq8
                    , ''   AS rcv_coupon_cd8
                    , 0    AS rcv_coupon_qust_seq9
                    , 0    AS rcv_coupon_seq9
                    , ''   AS rcv_coupon_cd9
                    , 0    AS rcv_coupon_qust_seq10
                    , 0    AS rcv_coupon_seq10
                    , ''   AS rcv_coupon_cd10
                    , upd_dttm
                    , 0    AS rcv_agre_coupon_seq
                    , ''   AS rcv_agre_coupon_cd
		        FROM (
		          	SELECT survey_seq
						, rcver_phone_num
		               	, qust_form_cd
		               	, qust_res_cl_cd
		               	, LISTAGG(ans_cont, ',') WITHIN GROUP(ORDER BY ans_prt_ord) AS ans_cont
		               	, qust_seq
		               	, upd_dttm
					FROM (
		               	SELECT sr.survey_seq
							, sp.rcver_phone_num
		                    , sr.qust_seq
		                    , sq.qust_form_cd
		                    , sq.qust_ord_cl_cd
		                    , sq.qust_res_cl_cd
		                    , sr.ans_seq
					<if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
		    		<choose>
		        		<when test="@MybatisUtils@equalsByString(normalAnsYn, 'Y')">		
		                    , DECODE(sq.qust_form_cd, 'MLTPC', TO_CHAR(sa.ans_prt_ord), sr.msg_cont) AS ans_cont
		        		</when>
		        		<otherwise>
		                    , sr.msg_cont AS ans_cont		                    
		        		</otherwise>
		    		</choose>
					</if>   
                            , sa.ans_prt_ord
                            , CASE WHEN partcptn_state_cd IN ('COMPL' , 'SCR') THEN sp.upd_dttm ELSE null end AS upd_dttm
						FROM (
		                	SELECT * FROM (
		                         SELECT survey_res_seq
		                              , survey_seq
		                              , snd_phone_num
		                              , qust_seq
		                              , ans_seq
		                              , rcv_msg_seq
		                              , msg_cont
		                              , MAX(rcv_msg_seq) OVER(PARTITION BY qust_seq, snd_phone_num) AS max_seq
		                            FROM survey_res
		                           WHERE survey_seq = #{surveySeq}
		                             AND msg_tp_cd = 'ANS'
								<if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
                                     AND normal_ans_yn = #{normalAnsYn}
								</if>
                            ) WHERE rcv_msg_seq = max_seq
		               ) sr
		               INNER JOIN survey_partcptn sp ON sp.survey_seq = sr.survey_seq AND sr.snd_phone_num = sp.rcver_phone_num
		               <if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
		               AND (partcptn_state_cd = 'COMPL' OR partcptn_state_cd = 'SCR')
					   </if>
                       LEFT OUTER JOIN survey_ans sa ON sr.ans_seq = sa.ans_seq
		               LEFT OUTER JOIN survey_qust sq ON sr.qust_seq = sq.qust_seq
		          ) GROUP BY survey_seq
		                   , rcver_phone_num
		                   , qust_form_cd
		                   , qust_res_cl_cd
		                   , qust_seq
		                   , upd_dttm
		     ) GROUP BY survey_seq, rcver_phone_num, upd_dttm
             UNION ALL
             SELECT 
				b.survey_seq
                , b.rcver_phone_num
                , '' AS ans_cont
                , ''  AS qust_seq   
                , DECODE(rcv_coupon_qust_seq1, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq2, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq3, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq4, NULL, 0, 1) 
		          		+ DECODE(rcv_coupon_qust_seq5, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq6, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq7, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq8, NULL, 0, 1) 
		          		+ DECODE(rcv_coupon_qust_seq9, NULL, 0, 1) + DECODE(rcv_coupon_qust_seq10, NULL, 0, 1) + DECODE(rcv_agre_coupon_seq, NULL, 0, 1) AS coupon_rcv_cnt
                , b.rcv_coupon_qust_seq1
                , b.rcv_coupon_seq1
                , b1.survey_coupon_cd
                , b.rcv_coupon_qust_seq2
                , b.rcv_coupon_seq2
                , b2.survey_coupon_cd
                , b.rcv_coupon_qust_seq3
                , b.rcv_coupon_seq3
                , b3.survey_coupon_cd
                , b.rcv_coupon_qust_seq4
                , b.rcv_coupon_seq4
                , b4.survey_coupon_cd
                , b.rcv_coupon_qust_seq5
                , b.rcv_coupon_seq5
                , b5.survey_coupon_cd
                , b.rcv_coupon_qust_seq6
                , b.rcv_coupon_seq6
                , b6.survey_coupon_cd
                , b.rcv_coupon_qust_seq7
                , b.rcv_coupon_seq7
                , b7.survey_coupon_cd
                , b.rcv_coupon_qust_seq8
                , b.rcv_coupon_seq8
                , b8.survey_coupon_cd
                , b.rcv_coupon_qust_seq9
                , b.rcv_coupon_seq9
                , b9.survey_coupon_cd
                , b.rcv_coupon_qust_seq10
                , b.rcv_coupon_seq10
                , b10.survey_coupon_cd
                , null AS upd_dttm
                , b.rcv_agre_coupon_seq
                , b11.survey_agre_coupon_cd
            from survey_coupon_result b
            LEFT OUTER JOIN survey_coupon b1 ON b.rcv_coupon_seq1 = b1.survey_coupon_seq AND b.rcver_phone_num = b1.rcver_phone_num AND b1.coupon_state_cd IN ('ISSUE', 'REISS')
			LEFT OUTER JOIN survey_coupon b2 ON b.rcv_coupon_seq2 = b2.survey_coupon_seq AND b.rcver_phone_num = b2.rcver_phone_num AND b2.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b3 ON b.rcv_coupon_seq3 = b3.survey_coupon_seq AND b.rcver_phone_num = b3.rcver_phone_num AND b3.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b4 ON b.rcv_coupon_seq4 = b4.survey_coupon_seq AND b.rcver_phone_num = b4.rcver_phone_num AND b4.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b5 ON b.rcv_coupon_seq5 = b5.survey_coupon_seq AND b.rcver_phone_num = b5.rcver_phone_num AND b5.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b6 ON b.rcv_coupon_seq6 = b6.survey_coupon_seq AND b.rcver_phone_num = b6.rcver_phone_num AND b6.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b7 ON b.rcv_coupon_seq7 = b7.survey_coupon_seq AND b.rcver_phone_num = b7.rcver_phone_num AND b7.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b8 ON b.rcv_coupon_seq8 = b8.survey_coupon_seq AND b.rcver_phone_num = b8.rcver_phone_num AND b8.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b9 ON b.rcv_coupon_seq9 = b9.survey_coupon_seq AND b.rcver_phone_num = b9.rcver_phone_num AND b9.coupon_state_cd IN ('ISSUE', 'REISS')
            LEFT OUTER JOIN survey_coupon b10 ON b.rcv_coupon_seq10 = b10.survey_coupon_seq AND b.rcver_phone_num = b10.rcver_phone_num AND b10.coupon_state_cd IN ('ISSUE', 'REISS')
            left outer join survey_agre_coupon b11 on b.rcv_agre_coupon_seq = b11.survey_agre_coupon_seq and b.rcver_phone_num = b11.rcver_phone_num and b11.coupon_state_cd IN ('ISSUE', 'REISS')
            WHERE b.survey_seq = #{surveySeq}      
		) GROUP BY survey_seq, rcver_phone_num	
		ORDER BY MAX(upd_dttm) DESC	
    </select>
    
    <select id="selectSurveyResultExcelList" parameterType="com.skt.mate.model.domain.survey.SurveyVO" resultType="com.skt.mate.model.domain.survey.SurveyResultVO">
    	SELECT 
    		survey_seq AS surveySeq
		    , snd_phone_num AS sndPhoneNum
		    , LISTAGG(ans_cont, '___') WITHIN GROUP(ORDER BY qust_seq) AS ansCont
		    , LISTAGG(qust_seq, ',') WITHIN GROUP(ORDER BY qust_seq) AS qustSeq
		    , rcver_phone_num AS rcverPhoneNum
		    , upd_dttm AS updDttm
		FROM (
			SELECT 
				survey_seq
		        , snd_phone_num
		        , qust_form_cd
		        , qust_res_cl_cd
		        , LISTAGG(ans_cont, ',') WITHIN GROUP(ORDER BY ans_prt_ord) AS ans_cont
		        , qust_seq
		        , rcver_phone_num
		        , upd_dttm
			FROM (
		    	SELECT 
		    		sr.survey_seq
		            , sr.snd_phone_num
		            , sr.qust_seq
		            , sq.qust_form_cd
		            , sq.qust_ord_cl_cd
		            , sq.qust_res_cl_cd
		            , sr.ans_seq
		<if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
		    <choose>
		        <when test="@MybatisUtils@equalsByString(normalAnsYn, 'Y')">
					, DECODE(sq.qust_form_cd, 'MLTPC', TO_CHAR(sa.ans_prt_ord), sr.msg_cont) AS ans_cont
		        </when>
		        <otherwise>
		            , sr.msg_cont AS ans_cont
		        </otherwise>
		    </choose>
		</if>
					, sa.ans_prt_ord
		            , sp.rcver_phone_num
		            , decode(partcptn_state_cd, 'COMPL', sp.upd_dttm, null) AS upd_dttm
				FROM (
		        	SELECT * FROM (
		            	SELECT survey_res_seq
		                	, survey_seq
		                    , snd_phone_num
		                    , qust_seq
		                    , ans_seq
		                    , rcv_msg_seq
		                    , msg_cont
		                    , normal_ans_yn
		                    , MAX(rcv_msg_seq) OVER(PARTITION BY qust_seq, snd_phone_num) AS max_seq
						FROM survey_res
		                WHERE survey_seq = #{surveySeq}
		                AND msg_tp_cd = 'ANS'
					) WHERE rcv_msg_seq = max_seq
				) sr
		        INNER JOIN survey_partcptn sp ON sp.survey_seq = sr.survey_seq AND sr.snd_phone_num = sp.rcver_phone_num
		<if test="@MybatisUtils@isNotEmpty(isWeb) and @MybatisUtils@equalsByString(isWeb, 'Y')">
		        AND partcptn_state_cd = 'COMPL'
		</if>
				LEFT OUTER JOIN survey_ans sa ON sr.ans_seq = sa.ans_seq
		        LEFT OUTER JOIN survey_qust sq ON sr.qust_seq = sq.qust_seq
		<if test="@MybatisUtils@isNotEmpty(normalAnsYn)">
				WHERE normal_ans_yn = #{normalAnsYn}
		</if>
			) GROUP BY survey_seq
		     			, snd_phone_num
		                , qust_form_cd
		                , qust_res_cl_cd
		                , qust_seq
		                , rcver_phone_num
		                , upd_dttm
		) GROUP BY survey_seq, snd_phone_num, rcver_phone_num, upd_dttm
		ORDER BY upd_dttm DESC
    </select>
    
    <select id="selectSurveyTgtAppInfoExcel" parameterType="Long" resultType="com.skt.mate.model.domain.survey.SurveyVO">
    	SELECT
    		SURVEY_SEQ AS surveySeq    
		    , (SELECT RLC_DISP_NM FROM RLC r WHERE r.RLC_ID=c.RLC_ID ) AS rlcNm
		    , (SELECT DLC_DISP_NM FROM DLC d WHERE d.DLC_ID=c.DLC_ID ) AS dlcNm
		    , u.USER_NM AS customNm
		    , TGT_CND_USE_YN AS tgtCndUseYn
		    , TGT_CND_CONT AS tgtCndCont
		    , p.SURVEY_PROJECT_NM AS surveyProjectNm
		    , SURVEY_TITLE AS surveyTitle
		    , cd.CD_NM AS surveyStateCd
		    , TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyStartStr
		    , TO_CHAR(SURVEY_END_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyEndStr
		    , (SELECT b.LOGIN_ID FROM CUSTOM_CONTACT b WHERE b.USER_ID = s.CRT_USER_ID) AS loginId
		    , (SELECT a.LOGIN_EMAIL FROM ADMIN a WHERE s.APPR_USER_ID=a.USER_ID) as apprUserNm
		    , NVL(s.SURVEY_COMPL_TARGET_CNT, 0) AS surveyComplTargetCnt
		    , (SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_TEMP_TRGTER tgt WHERE tgt.SURVEY_SEQ = s.SURVEY_SEQ AND DUP_RCVER_YN = 'N' AND RCV_RJT_YN = 'N') AS rcverPhoneNumCnt
		    , (SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_TEMP_TRGTER tgt WHERE tgt.SURVEY_SEQ = s.SURVEY_SEQ AND RCV_RJT_YN = 'Y') AS rcvRjtPhoneNumCnt
		    , s.AGRE_COUPON_ASSIGN_YN AS agreCouponAssignYn
		    , NVL(s.SURVEY_MSG_TP, '') AS surveyMsgTp
		    , NVL(s.BALANCE_ACCOUNT_CNT, 0) AS balanceAccountCnt
		FROM SURVEY s
		INNER JOIN SYSTEM_USER u ON s.CUSTOM_ID=u.USER_ID
		INNER JOIN CUSTOM c ON s.CUSTOM_ID=c.USER_ID
		INNER JOIN SURVEY_PROJECT p ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
		INNER JOIN COM_CD cd ON cd.CD_GRP_ID = 'SURVEY_STATE_CD' AND cd.CD_ID = s.SURVEY_STATE_CD
		WHERE SURVEY_SEQ = #{surveySeq}
    </select>
    
    <select id="selectSurveyTgtAppDupNumExcel" parameterType="Long" resultType="com.skt.mate.model.domain.survey.SurveyVO">
    	<!-- SELECT 
    		tgt.DUP_REF_SURVEY_SEQ AS surveySeq
    		, tgt.RCVER_PHONE_NUM AS rcverPhoneNum
		    , (SELECT RLC_DISP_NM FROM RLC r WHERE r.RLC_ID=c.RLC_ID ) AS rlcNm
		    , (SELECT DLC_DISP_NM FROM DLC d WHERE d.DLC_ID=c.DLC_ID ) AS dlcNm
		    , u.USER_NM AS customNm
		    , TGT_CND_USE_YN AS tgtCndUseYn
		    , p.SURVEY_PROJECT_NM AS surveyProjectNm
		    , SURVEY_TITLE AS surveyTitle
		    , c.CD_NM AS surveyStateCd
		    , TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyStartStr
		    , TO_CHAR(SURVEY_END_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyEndStr
		    , (SELECT b.LOGIN_ID FROM CUSTOM_CONTACT b WHERE b.USER_ID = s.CRT_USER_ID) AS loginId
		    , (SELECT a.LOGIN_EMAIL FROM ADMIN a WHERE s.APPR_USER_ID=a.USER_ID) as apprUserNm
		    , (SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_PARTCPTN sp WHERE sp.SURVEY_SEQ = s.SURVEY_SEQ) AS rcverPhoneNumCnt
		    , (SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_PARTCPTN sp WHERE sp.SURVEY_SEQ = s.SURVEY_SEQ AND PARTCPTN_STATE_CD = 'COMPL') AS surveyComplCnt
		FROM SURVEY_TEMP_TRGTER tgt
		INNER JOIN SURVEY s ON s.SURVEY_SEQ = tgt.DUP_REF_SURVEY_SEQ
		INNER JOIN SYSTEM_USER u ON s.CUSTOM_ID=u.USER_ID
		INNER JOIN CUSTOM c ON s.CUSTOM_ID=c.USER_ID
		INNER JOIN SURVEY_PROJECT p ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
		INNER JOIN COM_CD c ON c.CD_GRP_ID = 'SURVEY_STATE_CD' AND CD_ID = s.SURVEY_STATE_CD
		WHERE tgt.SURVEY_SEQ = #{surveySeq}
		ORDER BY tgt.DUP_REF_SURVEY_SEQ -->
		SELECT 
    		tgt.DUP_REF_SURVEY_SEQ AS surveySeq
    		, tgt.RCVER_PHONE_NUM AS rcverPhoneNum
		    , (SELECT RLC_DISP_NM FROM RLC r WHERE r.RLC_ID=c.RLC_ID ) AS rlcNm
		    , (SELECT DLC_DISP_NM FROM DLC d WHERE d.DLC_ID=c.DLC_ID ) AS dlcNm
		    , u.USER_NM AS customNm
		    , TGT_CND_USE_YN AS tgtCndUseYn
		    , p.SURVEY_PROJECT_NM AS surveyProjectNm
		    , SURVEY_TITLE AS surveyTitle
		    , cc.CD_NM AS surveyStateCd
		    , TO_CHAR(SURVEY_START_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyStartStr
		    , TO_CHAR(SURVEY_END_DTTM, 'YYYY-MM-DD HH24:MI' ) AS surveyEndStr
		    , (SELECT b.LOGIN_ID FROM CUSTOM_CONTACT b WHERE b.USER_ID = s.CRT_USER_ID) AS loginId
		    , (SELECT a.LOGIN_EMAIL FROM ADMIN a WHERE s.APPR_USER_ID=a.USER_ID) as apprUserNm
		    , (SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_PARTCPTN sp WHERE sp.SURVEY_SEQ = s.SURVEY_SEQ) AS rcverPhoneNumCnt
		    , (SELECT COUNT(RCVER_PHONE_NUM) FROM SURVEY_PARTCPTN sp WHERE sp.SURVEY_SEQ = s.SURVEY_SEQ AND PARTCPTN_STATE_CD = 'COMPL') AS surveyComplCnt
		FROM SURVEY_TEMP_TRGTER tgt
		INNER JOIN SURVEY s ON s.SURVEY_SEQ = tgt.DUP_REF_SURVEY_SEQ
		INNER JOIN SYSTEM_USER u ON s.CUSTOM_ID=u.USER_ID
		INNER JOIN CUSTOM c ON s.CUSTOM_ID=c.USER_ID
		INNER JOIN SURVEY_PROJECT p ON s.SURVEY_PROJECT_SEQ = p.SURVEY_PROJECT_SEQ
		INNER JOIN COM_CD cc ON cc.CD_GRP_ID = 'SURVEY_STATE_CD' AND cc.CD_ID = s.SURVEY_STATE_CD
		WHERE tgt.SURVEY_SEQ = #{surveySeq}
		ORDER BY tgt.DUP_REF_SURVEY_SEQ
    </select>
    
    <delete id="deleteSurveyCouponResult" parameterType="Long" >
    	DELETE /* [survey/survey.sqlmap.xml].[deleteSurveyCouponResult]*/ 
    	FROM survey_coupon_result
    	WHERE survey_seq = #{surveySeq}
    </delete>
    
    <select id="getCountRunningRefCouponSurveySeq" parameterType="Long" resultType="Integer">
    	SELECT /* [survey/survey.sqlmap.xml].[getCountRunningRefSurveySeq]*/
    		COUNT(survey_seq)
    	FROM survey s
    	WHERE ref_survey_seq = #{surveySeq}
    	AND survey_state_cd = 'RUNNING' 
    	AND EXISTS ( SELECT rcver_phone_num 
    				 FROM survey_partcptn p 
    				 WHERE p.survey_seq = s.survey_seq
    				 AND partcptn_state_cd NOT IN ('COMPL', 'SCR')
    	) 
    	AND EXISTS ( SELECT 1
                     FROM survey_coupon c
                     where c.survey_seq = s.survey_seq )
    </select> 
    
    <insert id="insertSurveyAnalResult" parameterType="com.skt.mate.model.domain.survey.SurveyAnalysisResultVO">
    	INSERT /* [survey/survey.sqlmap.xml].[insertSurveyAnalResult]*/
    	INTO survey_anal_result (
    		survey_anal_result_seq
    		, survey_seq
    		, rspnd_tp_cd
    		, gender_cd
    		, age_val
    		, addr
    		, region_nm
    		, os_nm
    		, ans_cont1
    		, ans_cont2
    		, ans_cont3
    		, ans_cont4
    		, ans_cont5
    		, ans_cont6
    		, ans_cont7
    		, ans_cont8
    		, ans_cont9
    		, ans_cont10
    		, ans_cont11
    		, ans_cont12
    		, ans_cont13
    		, ans_cont14
    		, ans_cont15
    		, ans_cont16
    		, ans_cont17
    		, ans_cont18
    		, ans_cont19
    		, ans_cont20
    		, rcv_coupon_qust_seq1
    		, rcv_coupon_seq1    		
    		, rcv_coupon_qust_seq2
    		, rcv_coupon_seq2
    		, rcv_coupon_qust_seq3
    		, rcv_coupon_seq3
    		, rcv_coupon_qust_seq4
    		, rcv_coupon_seq4
    		, rcv_coupon_qust_seq5
    		, rcv_coupon_seq5
    		, rcv_coupon_qust_seq6
    		, rcv_coupon_seq6
    		, rcv_coupon_qust_seq7
    		, rcv_coupon_seq7
    		, rcv_coupon_qust_seq8
    		, rcv_coupon_seq8
    		, rcv_coupon_qust_seq9
    		, rcv_coupon_seq9
    		, rcv_coupon_qust_seq10
    		, rcv_coupon_seq10
    		, survey_cmpl_dttm
    		, crt_dttm
    	) VALUES (
    		SURVEY_ANAL_RESULT_SEQ.NEXTVAL
    		, #{surveySeq}
    		, #{rspndTpCd}
    		, #{genderCd}
    		, #{ageVal}
    		, #{addr}
    		, #{regionNm}
    		, #{osNm}
    		, #{ansCont1}
    		, #{ansCont2}
    		, #{ansCont3}
    		, #{ansCont4}
    		, #{ansCont5}
    		, #{ansCont6}
    		, #{ansCont7}
    		, #{ansCont8}
    		, #{ansCont9}
    		, #{ansCont10}
    		, #{ansCont11}
    		, #{ansCont12}
    		, #{ansCont13}
    		, #{ansCont14}
    		, #{ansCont15}
    		, #{ansCont16}
    		, #{ansCont17}
    		, #{ansCont18}
    		, #{ansCont19}
    		, #{ansCont20}
    		, #{rcvCouponQustSeq1}
    		, #{rcvCouponSeq1}    		
    		, #{rcvCouponQustSeq2}
    		, #{rcvCouponSeq2}
    		, #{rcvCouponQustSeq3}
    		, #{rcvCouponSeq3}
    		, #{rcvCouponQustSeq4}
    		, #{rcvCouponSeq4}
    		, #{rcvCouponQustSeq5}
    		, #{rcvCouponSeq5}
    		, #{rcvCouponQustSeq6}
    		, #{rcvCouponSeq6}
    		, #{rcvCouponQustSeq7}
    		, #{rcvCouponSeq7}
    		, #{rcvCouponQustSeq8}
    		, #{rcvCouponSeq8}
    		, #{rcvCouponQustSeq9}
    		, #{rcvCouponSeq9}
    		, #{rcvCouponQustSeq10}
    		, #{rcvCouponSeq10}
    		, #{surveyCmplDttm}
    		, SYSDATE
    	)
    </insert>

	<delete id="deleteSurveyAnalResult" parameterType="Long">
		DELETE /* [survey/survey.sqlmap.xml].[deleteSurveyAnalResult]*/
		FROM survey_anal_result
		WHERE survey_seq = #{surveySeq}
	</delete>
	
	<delete id="deleteSurveyStateUpdHist" parameterType="Long">
		DELETE FROM SURVEY_STATE_UPD_HIST WHERE survey_seq = #{surveySeq}
	</delete>    
	
	<delete id="deleteSurveyAgreCoupon" parameterType="Long">
        DELETE FROM SURVEY_AGRE_COUPON
        WHERE SURVEY_SEQ=#{surveySeq}
    </delete>
    
    <insert id="insertSurveyAgreCoupon" parameterType="com.skt.mate.model.domain.survey.SurveyAgreCouponVO">
        INSERT INTO SURVEY_AGRE_COUPON
        (
        SURVEY_AGRE_COUPON_SEQ
        , SURVEY_SEQ
        , SURVEY_AGRE_COUPON_CD
        , COUPON_STATE_CD
        , CRT_DTTM
        , UPD_DTTM
        )
        SELECT
        SURVEY_AGRE_COUPON_SEQ.NEXTVAL
        , #{surveySeq}
        , A.SURVEY_AGRE_COUPON_CD
        , 'NOISS'
        , SYSDATE
        , SYSDATE
        FROM
        (
        <foreach collection="agreCouponCdList" item="item" separator="UNION ALL">
            SELECT
            #{item} AS SURVEY_AGRE_COUPON_CD
            FROM DUAL
        </foreach>
        ) A
    </insert>
    
    
    <insert id="insertTestSurveyAgreCoupon" parameterType="com.skt.mate.model.domain.survey.SurveyAgreCouponVO">
    	INSERT /*[survey/survey.sqlmap.xml].[insertTestSurveyAgreCoupon] */ 
    	INTO SURVEY_AGRE_COUPON
    	(
    		SURVEY_AGRE_COUPON_SEQ
        	, SURVEY_SEQ
        	, SURVEY_AGRE_COUPON_CD
        	, COUPON_STATE_CD
        	, RCVER_PHONE_NUM
        	, CRT_DTTM
        	, UPD_DTTM
    	)
    	SELECT
    		SURVEY_AGRE_COUPON_SEQ.NEXTVAL
    		, #{surveySeq}
    		, SURVEY_AGRE_COUPON_CD
    		, COUPON_STATE_CD
        	, RCVER_PHONE_NUM
    		, SYSDATE
    		, SYSDATE
    	FROM SURVEY_AGRE_COUPON
    	WHERE SURVEY_SEQ = #{refSurveySeq}
    </insert>
    
    
    <insert id="insertSurveyAgreAssignedCoupon" parameterType="java.util.List">
        INSERT INTO SURVEY_AGRE_COUPON
        (
        SURVEY_AGRE_COUPON_SEQ
        , SURVEY_SEQ
        , SURVEY_AGRE_COUPON_CD
        , COUPON_STATE_CD
        , RCVER_PHONE_NUM
        , CRT_DTTM
        , UPD_DTTM
        )
        SELECT
        SURVEY_AGRE_COUPON_SEQ.NEXTVAL
        , A.SURVEY_SEQ
        , A.SURVEY_AGRE_COUPON_CD
        , 'ISSUE'
        , A.RCVER_PHONE_NUM
        , SYSDATE
        , SYSDATE
        FROM
        (
        <foreach collection="list" item="item" separator="UNION ALL">
            SELECT
            #{item.surveySeq} AS SURVEY_SEQ,
            #{item.assignedCouponCd} AS SURVEY_AGRE_COUPON_CD,
            #{item.rcverPhoneNum} AS RCVER_PHONE_NUM
            FROM DUAL
        </foreach>
        ) A
    </insert>
    
    <select id="getAgreCouponCount" parameterType="Long" resultType="Integer">
    	SELECT COUNT(*) FROM SURVEY_AGRE_COUPON WHERE SURVEY_SEQ =#{surveySeq}
    </select>
    
</mapper>